{
  "contractName": "Governor",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "blender_",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blender",
      "outputs": [
        {
          "internalType": "contract BlndInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "support",
              "type": "bool"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct Governor.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Governor.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200324338038062003243833981016040819052620000349162000079565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055620000e4565b80516200007381620000ca565b92915050565b600080604083850312156200008d57600080fd5b60006200009b858562000066565b9250506020620000ae8582860162000066565b9150509250929050565b60006001600160a01b03821662000073565b620000d581620000b8565b8114620000e157600080fd5b50565b61314f80620000f46000396000f3fe6080604052600436106101355760003560e01c806340e58ee5116100ab578063da35c6641161006f578063da35c6641461033b578063da95691a14610350578063ddf0b00914610370578063deaaa7cc14610390578063e23a9a52146103a5578063fe0d94c1146103d257610135565b806340e58ee5146102bc5780634634c61f146102dc5780637bdbe4d0146102fc578063b58131b014610311578063d33219b41461032657610135565b806320606b70116100fd57806320606b70146101fe57806324bc1a64146102135780632e0f691414610228578063328dd9821461024a5780633932abb11461027a5780633e4f49e61461028f57610135565b8063013cf08b1461013a57806302a251a31461017857806306fdde031461019a57806315373e3d146101bc57806317977c61146101de575b600080fd5b34801561014657600080fd5b5061015a61015536600461207c565b6103e5565b60405161016f99989796959493929190612f05565b60405180910390f35b34801561018457600080fd5b5061018d61043e565b60405161016f9190612c72565b3480156101a657600080fd5b506101af610445565b60405161016f9190612d2e565b3480156101c857600080fd5b506101dc6101d73660046120d4565b610471565b005b3480156101ea57600080fd5b5061018d6101f9366004611ef9565b610480565b34801561020a57600080fd5b5061018d610492565b34801561021f57600080fd5b5061018d6104a9565b34801561023457600080fd5b5061023d6104b8565b60405161016f9190612d12565b34801561025657600080fd5b5061026a61026536600461207c565b6104c7565b60405161016f9493929190612c25565b34801561028657600080fd5b5061018d610756565b34801561029b57600080fd5b506102af6102aa36600461207c565b61075b565b60405161016f9190612d20565b3480156102c857600080fd5b506101dc6102d736600461207c565b6108e6565b3480156102e857600080fd5b506101dc6102f7366004612104565b610b3a565b34801561030857600080fd5b5061018d610cca565b34801561031d57600080fd5b5061018d610ccf565b34801561033257600080fd5b5061023d610cde565b34801561034757600080fd5b5061018d610ced565b34801561035c57600080fd5b5061018d61036b366004611f1f565b610cf3565b34801561037c57600080fd5b506101dc61038b36600461207c565b611115565b34801561039c57600080fd5b5061018d611383565b3480156103b157600080fd5b506103c56103c036600461209a565b61138f565b60405161016f9190612e4f565b6101dc6103e036600461207c565b6113fe565b6003602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b619d805b90565b6040518060400160405280601081526020016f213632b73232b91023b7bb32b93737b960811b81525081565b61047c3383836115c3565b5050565b60046020526000908152604090205481565b60405161049e90612b16565b604051809103902081565b6a0de589d32bd931c400000090565b6001546001600160a01b031681565b6060806060806000600360008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561054957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161052b575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561059b57602002820191906000526020600020905b815481526020019060010190808311610587575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b8282101561066e5760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561065a5780601f1061062f5761010080835404028352916020019161065a565b820191906000526020600020905b81548152906001019060200180831161063d57829003601f168201915b5050505050815260200190600101906105c3565b50505050915080805480602002602001604051908101604052809291908181526020016000905b828210156107405760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561072c5780601f106107015761010080835404028352916020019161072c565b820191906000526020600020905b81548152906001019060200180831161070f57829003601f168201915b505050505081526020019060010190610695565b5050505090509450945094509450509193509193565b600190565b6000816002541015801561076f5750600082115b6107945760405162461bcd60e51b815260040161078b90612d9f565b60405180910390fd5b6000828152600360205260409020600b81015460ff16156107b95760029150506108e1565b806007015443116107ce5760009150506108e1565b806008015443116107e35760019150506108e1565b80600a0154816009015411158061080457506107fd6104a9565b8160090154105b156108135760039150506108e1565b60028101546108265760049150506108e1565b600b810154610100900460ff16156108425760079150506108e1565b6002810154600054604080516360d143f160e11b815290516108cb93926001600160a01b03169163c1a287e2916004808301926020929190829003018186803b15801561088e57600080fd5b505afa1580156108a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108c69190810190612029565b61178c565b42106108db5760069150506108e1565b60059150505b919050565b60006108f18261075b565b9050600781600781111561090157fe5b141561091f5760405162461bcd60e51b815260040161078b90612d6f565b6000828152600360205260409020610935610ccf565b60018054838201546001600160a01b039182169263782d6fe1929091169061095e9043906117b8565b6040518363ffffffff1660e01b815260040161097b929190612b47565b60206040518083038186803b15801561099357600080fd5b505afa1580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109cb919081019061216c565b6001600160601b0316106109f15760405162461bcd60e51b815260040161078b90612dff565b600b8101805460ff1916600117905560005b6003820154811015610afd576000546003830180546001600160a01b039092169163591fcdfe919084908110610a3557fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610a5d57fe5b9060005260206000200154856005018581548110610a7757fe5b90600052602060002001866006018681548110610a9057fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610abf959493929190612be4565b600060405180830381600087803b158015610ad957600080fd5b505af1158015610aed573d6000803e3d6000fd5b505060019092019150610a039050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610b2d9190612c72565b60405180910390a1505050565b6000604051610b4890612b16565b60408051918290038220828201909152601082526f213632b73232b91023b7bb32b93737b960811b6020909201919091527f91e201ef00ad9a3add8ca0089ef61a61c360692b61f2fa93680ba3a54016fd87610ba26117e0565b30604051602001610bb69493929190612c80565b6040516020818303038152906040528051906020012090506000604051610bdc90612b21565b604051908190038120610bf59189908990602001612cb5565b60405160208183030381529060405280519060200120905060008282604051602001610c22929190612ae5565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610c5f9493929190612cdd565b6020604051602081039080840390855afa158015610c81573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cb45760405162461bcd60e51b815260040161078b90612e3f565b610cbf818a8a6115c3565b505050505050505050565b600a90565b6a03796274caf64c7100000090565b6000546001600160a01b031681565b60025481565b6000610cfd610ccf565b600180546001600160a01b03169063782d6fe1903390610d1e9043906117b8565b6040518363ffffffff1660e01b8152600401610d3b929190612b2c565b60206040518083038186803b158015610d5357600080fd5b505afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d8b919081019061216c565b6001600160601b031611610db15760405162461bcd60e51b815260040161078b90612d3f565b84518651148015610dc3575083518651145b8015610dd0575082518651145b610dec5760405162461bcd60e51b815260040161078b90612d4f565b8551610e0a5760405162461bcd60e51b815260040161078b90612d7f565b610e12610cca565b86511115610e325760405162461bcd60e51b815260040161078b90612d5f565b336000908152600460205260409020548015610eaf576000610e538261075b565b90506001816007811115610e6357fe5b1415610e815760405162461bcd60e51b815260040161078b90612daf565b6000816007811115610e8f57fe5b1415610ead5760405162461bcd60e51b815260040161078b90612d8f565b505b6000610ebd436108c6610756565b90506000610ecd826108c661043e565b6002805460010190559050610ee0611943565b604051806101a001604052806002548152602001336001600160a01b03168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000151581526020016000151581525090508060036000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003019080519060200190610fc39291906119b8565b5060808201518051610fdf916004840191602090910190611a1d565b5060a08201518051610ffb916005840191602090910190611a64565b5060c08201518051611017916006840191602090910190611abd565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555061018082015181600b0160016101000a81548160ff02191690831515021790555090505080600001516004600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e6040516110fd99989796959493929190612e5d565b60405180910390a15193505050505b95945050505050565b60046111208261075b565b600781111561112b57fe5b146111485760405162461bcd60e51b815260040161078b90612e2f565b600081815260036020908152604080832083548251630d48571f60e31b815292519194936111a19342936001600160a01b0390931692636a42b8f892600480840193919291829003018186803b15801561088e57600080fd5b905060005b6003830154811015611349576113418360030182815481106111c457fe5b6000918252602090912001546004850180546001600160a01b0390921691849081106111ec57fe5b906000526020600020015485600501848154811061120657fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156112945780601f1061126957610100808354040283529160200191611294565b820191906000526020600020905b81548152906001019060200180831161127757829003601f168201915b50505050508660060185815481106112a857fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156113365780601f1061130b57610100808354040283529160200191611336565b820191906000526020600020905b81548152906001019060200180831161131957829003601f168201915b5050505050866117e4565b6001016111a6565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610b2d9085908490612f8b565b60405161049e90612b21565b611397611b16565b5060008281526003602090815260408083206001600160a01b0385168452600c018252918290208251606081018452905460ff80821615158352610100820416151592820192909252620100009091046001600160601b0316918101919091525b92915050565b60056114098261075b565b600781111561141457fe5b146114315760405162461bcd60e51b815260040161078b90612dbf565b6000818152600360205260408120600b8101805461ff001916610100179055905b6003820154811015611587576000546004830180546001600160a01b0390921691630825f38f91908490811061148457fe5b906000526020600020015484600301848154811061149e57fe5b6000918252602090912001546004860180546001600160a01b0390921691869081106114c657fe5b90600052602060002001548660050186815481106114e057fe5b906000526020600020018760060187815481106114f957fe5b9060005260206000200188600201546040518763ffffffff1660e01b8152600401611528959493929190612be4565b6000604051808303818588803b15801561154157600080fd5b505af1158015611555573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261157e9190810190612047565b50600101611452565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516115b79190612c72565b60405180910390a15050565b60016115ce8361075b565b60078111156115d957fe5b146115f65760405162461bcd60e51b815260040161078b90612e0f565b60008281526003602090815260408083206001600160a01b0387168452600c8101909252909120805460ff161561163f5760405162461bcd60e51b815260040161078b90612def565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe191611675918a91600401612b47565b60206040518083038186803b15801561168d57600080fd5b505afa1580156116a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116c5919081019061216c565b905083156116ee576116e48360090154826001600160601b031661178c565b600984015561170b565b61170583600a0154826001600160601b031661178c565b600a8401555b8154600160ff199091161761ff00191661010085151502176dffffffffffffffffffffffff00001916620100006001600160601b038316021782556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c469061177c908890889088908690612b55565b60405180910390a1505050505050565b6000828201838110156117b15760405162461bcd60e51b815260040161078b90612dcf565b9392505050565b6000828211156117da5760405162461bcd60e51b815260040161078b90612e1f565b50900390565b4690565b6000546040516001600160a01b039091169063f2b06537906118129088908890889088908890602001612b8a565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016118449190612c72565b60206040518083038186803b15801561185c57600080fd5b505afa158015611870573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611894919081019061200b565b156118b15760405162461bcd60e51b815260040161078b90612ddf565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f901906118e99088908890889088908890600401612b8a565b602060405180830381600087803b15801561190357600080fd5b505af1158015611917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061193b9190810190612029565b505050505050565b604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611a0d579160200282015b82811115611a0d57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906119d8565b50611a19929150611b36565b5090565b828054828255906000526020600020908101928215611a58579160200282015b82811115611a58578251825591602001919060010190611a3d565b50611a19929150611b5a565b828054828255906000526020600020908101928215611ab1579160200282015b82811115611ab15782518051611aa1918491602090910190611b74565b5091602001919060010190611a84565b50611a19929150611be1565b828054828255906000526020600020908101928215611b0a579160200282015b82811115611b0a5782518051611afa918491602090910190611b74565b5091602001919060010190611add565b50611a19929150611c04565b604080516060810182526000808252602082018190529181019190915290565b61044291905b80821115611a195780546001600160a01b0319168155600101611b3c565b61044291905b80821115611a195760008155600101611b60565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bb557805160ff1916838001178555611a58565b82800160010185558215611a585791820182811115611a58578251825591602001919060010190611a3d565b61044291905b80821115611a19576000611bfb8282611c27565b50600101611be7565b61044291905b80821115611a19576000611c1e8282611c27565b50600101611c0a565b50805460018160011615610100020316600290046000825580601f10611c4d5750611c6b565b601f016020900490600052602060002090810190611c6b9190611b5a565b50565b80356113f8816130d4565b600082601f830112611c8a57600080fd5b8135611c9d611c9882612fc0565b612f99565b91508181835260208401935060208101905083856020840282011115611cc257600080fd5b60005b83811015611cee5781611cd88882611c6e565b8452506020928301929190910190600101611cc5565b5050505092915050565b600082601f830112611d0957600080fd5b8135611d17611c9882612fc0565b81815260209384019390925082018360005b83811015611cee5781358601611d3f8882611e4e565b8452506020928301929190910190600101611d29565b600082601f830112611d6657600080fd5b8135611d74611c9882612fc0565b81815260209384019390925082018360005b83811015611cee5781358601611d9c8882611e4e565b8452506020928301929190910190600101611d86565b600082601f830112611dc357600080fd5b8135611dd1611c9882612fc0565b91508181835260208401935060208101905083856020840282011115611df657600080fd5b60005b83811015611cee5781611e0c8882611e38565b8452506020928301929190910190600101611df9565b80356113f8816130e8565b80516113f8816130e8565b80356113f8816130f1565b80516113f8816130f1565b600082601f830112611e5f57600080fd5b8135611e6d611c9882612fe1565b91508082526020830160208301858383011115611e8957600080fd5b611e94838284613088565b50505092915050565b600082601f830112611eae57600080fd5b8151611ebc611c9882612fe1565b91508082526020830160208301858383011115611ed857600080fd5b611e94838284613094565b80356113f8816130fa565b80516113f881613103565b600060208284031215611f0b57600080fd5b6000611f178484611c6e565b949350505050565b600080600080600060a08688031215611f3757600080fd5b853567ffffffffffffffff811115611f4e57600080fd5b611f5a88828901611c79565b955050602086013567ffffffffffffffff811115611f7757600080fd5b611f8388828901611db2565b945050604086013567ffffffffffffffff811115611fa057600080fd5b611fac88828901611d55565b935050606086013567ffffffffffffffff811115611fc957600080fd5b611fd588828901611cf8565b925050608086013567ffffffffffffffff811115611ff257600080fd5b611ffe88828901611e4e565b9150509295509295909350565b60006020828403121561201d57600080fd5b6000611f178484611e2d565b60006020828403121561203b57600080fd5b6000611f178484611e43565b60006020828403121561205957600080fd5b815167ffffffffffffffff81111561207057600080fd5b611f1784828501611e9d565b60006020828403121561208e57600080fd5b6000611f178484611e38565b600080604083850312156120ad57600080fd5b60006120b98585611e38565b92505060206120ca85828601611c6e565b9150509250929050565b600080604083850312156120e757600080fd5b60006120f38585611e38565b92505060206120ca85828601611e22565b600080600080600060a0868803121561211c57600080fd5b60006121288888611e38565b955050602061213988828901611e22565b945050604061214a88828901611ee3565b935050606061215b88828901611e38565b9250506080611ffe88828901611e38565b60006020828403121561217e57600080fd5b6000611f178484611eee565b600061219683836121c5565b505060200190565b60006117b18383612367565b6000612196838361234d565b6121bf81613060565b82525050565b6121bf81613028565b60006121d98261301b565b6121e3818561301f565b93506121ee83613009565b8060005b8381101561221c578151612206888261218a565b975061221183613009565b9250506001016121f2565b509495945050505050565b60006122328261301b565b61223c818561301f565b93508360208202850161224e85613009565b8060005b85811015612288578484038952815161226b858261219e565b945061227683613009565b60209a909a0199925050600101612252565b5091979650505050505050565b60006122a08261301b565b6122aa818561301f565b9350836020820285016122bc85613009565b8060005b8581101561228857848403895281516122d9858261219e565b94506122e483613009565b60209a909a01999250506001016122c0565b60006123018261301b565b61230b818561301f565b935061231683613009565b8060005b8381101561221c57815161232e88826121aa565b975061233983613009565b92505060010161231a565b6121bf81613033565b6121bf81610442565b6121bf61236282610442565b610442565b60006123728261301b565b61237c818561301f565b935061238c818560208601613094565b612395816130c0565b9093019392505050565b6000815460018116600081146123bc57600181146123e257612421565b607f60028304166123cd818761301f565b60ff1984168152955050602085019250612421565b600282046123f0818761301f565b95506123fb8561300f565b60005b8281101561241a578154888201526001909101906020016123fe565b8701945050505b505092915050565b6121bf81613067565b6121bf81613072565b6000612448603a8361301f565b7f476f7665726e6f723a3a70726f706f73653a2070726f706f73657220766f746581527f732062656c6f772070726f706f73616c207468726573686f6c64000000000000602082015260400192915050565b60006124a7603f8361301f565b7f476f7665726e6f723a3a70726f706f73653a2070726f706f73616c2066756e6381527f74696f6e20696e666f726d6174696f6e206172697479206d69736d6174636800602082015260400192915050565b600061250660238361301f565b7f476f7665726e6f723a3a70726f706f73653a20746f6f206d616e7920616374698152626f6e7360e81b602082015260400192915050565b600061254b60318361301f565b7f476f7665726e6f723a3a63616e63656c3a2063616e6e6f742063616e63656c20815270195e1958dd5d1959081c1c9bdc1bdcd85b607a1b602082015260400192915050565b600061259e6002836108e1565b61190160f01b815260020192915050565b60006125bc60278361301f565b7f476f7665726e6f723a3a70726f706f73653a206d7573742070726f7669646520815266616374696f6e7360c81b602082015260400192915050565b600061260560548361301f565b7f476f7665726e6f723a3a70726f706f73653a206f6e65206c6976652070726f7081527f6f73616c207065722070726f706f7365722c20666f756e6420616e20616c726560208201527318591e481c195b991a5b99c81c1c9bdc1bdcd85b60621b604082015260600192915050565b600061268160248361301f565b7f476f7665726e6f723a3a73746174653a20696e76616c69642070726f706f73618152631b081a5960e21b602082015260400192915050565b60006126c760538361301f565b7f476f7665726e6f723a3a70726f706f73653a206f6e65206c6976652070726f7081527f6f73616c207065722070726f706f7365722c20666f756e6420616e20616c726560208201527218591e481858dd1a5d99481c1c9bdc1bdcd85b606a1b604082015260600192915050565b600061274260408361301f565b7f476f7665726e6f723a3a657865637574653a2070726f706f73616c2063616e2081527f6f6e6c7920626520657865637574656420696620697420697320717565756564602082015260400192915050565b60006127a160118361301f565b706164646974696f6e206f766572666c6f7760781b815260200192915050565b60006127ce6043836108e1565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b60006128396027836108e1565b7f42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c20738152667570706f72742960c81b602082015260270192915050565b6000612882603f8361301f565b7f476f7665726e6f723a3a5f71756575654f725265766572743a2070726f706f7381527f616c20616374696f6e20616c7265616479207175657565642061742065746100602082015260400192915050565b60006128e160288361301f565b7f476f7665726e6f723a3a5f63617374566f74653a20766f74657220616c726561815267191e481d9bdd195960c21b602082015260400192915050565b600061292b602a8361301f565b7f476f7665726e6f723a3a63616e63656c3a2070726f706f7365722061626f7665815269081d1a1c995cda1bdb1960b21b602082015260400192915050565b600061297760258361301f565b7f476f7665726e6f723a3a5f63617374566f74653a20766f74696e6720697320638152641b1bdcd95960da1b602082015260400192915050565b60006129be60158361301f565b747375627472616374696f6e20756e646572666c6f7760581b815260200192915050565b60006129ef603f8361301f565b7f476f7665726e6f723a3a71756575653a2070726f706f73616c2063616e206f6e81527f6c79206265207175657565642069662069742069732073756363656564656400602082015260400192915050565b6000612a4e602a8361301f565b7f476f7665726e6f723a3a63617374566f746542795369673a20696e76616c6964815269207369676e617475726560b01b602082015260400192915050565b80516060830190612a9e8482612344565b506020820151612ab16020850182612344565b506040820151612ac46040850182612adc565b50505050565b6121bf8161304e565b6121bf8161307d565b6121bf81613054565b6000612af082612591565b9150612afc8285612356565b602082019150612b0c8284612356565b5060200192915050565b60006113f8826127c1565b60006113f88261282c565b60408101612b3a82856121b6565b6117b1602083018461234d565b60408101612b3a82856121c5565b60808101612b6382876121c5565b612b70602083018661234d565b612b7d6040830185612344565b61110c6060830184612ad3565b60a08101612b9882886121c5565b612ba5602083018761234d565b8181036040830152612bb78186612367565b90508181036060830152612bcb8185612367565b9050612bda608083018461234d565b9695505050505050565b60a08101612bf282886121c5565b612bff602083018761234d565b8181036040830152612c11818661239f565b90508181036060830152612bcb818561239f565b60808082528101612c3681876121ce565b90508181036020830152612c4a81866122f6565b90508181036040830152612c5e8185612295565b90508181036060830152612bda8184612227565b602081016113f8828461234d565b60808101612c8e828761234d565b612c9b602083018661234d565b612ca8604083018561234d565b61110c60608301846121c5565b60608101612cc3828661234d565b612cd0602083018561234d565b611f176040830184612344565b60808101612ceb828761234d565b612cf86020830186612aca565b612d05604083018561234d565b61110c606083018461234d565b602081016113f88284612429565b602081016113f88284612432565b602080825281016117b18184612367565b602080825281016113f88161243b565b602080825281016113f88161249a565b602080825281016113f8816124f9565b602080825281016113f88161253e565b602080825281016113f8816125af565b602080825281016113f8816125f8565b602080825281016113f881612674565b602080825281016113f8816126ba565b602080825281016113f881612735565b602080825281016113f881612794565b602080825281016113f881612875565b602080825281016113f8816128d4565b602080825281016113f88161291e565b602080825281016113f88161296a565b602080825281016113f8816129b1565b602080825281016113f8816129e2565b602080825281016113f881612a41565b606081016113f88284612a8d565b6101208101612e6c828c61234d565b612e79602083018b6121b6565b8181036040830152612e8b818a6121ce565b90508181036060830152612e9f81896122f6565b90508181036080830152612eb38188612295565b905081810360a0830152612ec78187612227565b9050612ed660c083018661234d565b612ee360e083018561234d565b818103610100830152612ef68184612367565b9b9a5050505050505050505050565b6101208101612f14828c61234d565b612f21602083018b6121c5565b612f2e604083018a61234d565b612f3b606083018961234d565b612f48608083018861234d565b612f5560a083018761234d565b612f6260c083018661234d565b612f6f60e0830185612344565b612f7d610100830184612344565b9a9950505050505050505050565b60408101612b3a828561234d565b60405181810167ffffffffffffffff81118282101715612fb857600080fd5b604052919050565b600067ffffffffffffffff821115612fd757600080fd5b5060209081020190565b600067ffffffffffffffff821115612ff857600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b60006113f882613042565b151590565b806108e1816130ca565b6001600160a01b031690565b60ff1690565b6001600160601b031690565b60006113f8825b60006113f882613028565b60006113f882613038565b60006113f882613054565b82818337506000910152565b60005b838110156130af578181015183820152602001613097565b83811115612ac45750506000910152565b601f01601f191690565b60088110611c6b57fe5b6130dd81613028565b8114611c6b57600080fd5b6130dd81613033565b6130dd81610442565b6130dd8161304e565b6130dd8161305456fea365627a7a723158202d7cb95a559f5a3c953de55920b81f4467f5e1ef635284839cc5c4d8012a3e5e6c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x6080604052600436106101355760003560e01c806340e58ee5116100ab578063da35c6641161006f578063da35c6641461033b578063da95691a14610350578063ddf0b00914610370578063deaaa7cc14610390578063e23a9a52146103a5578063fe0d94c1146103d257610135565b806340e58ee5146102bc5780634634c61f146102dc5780637bdbe4d0146102fc578063b58131b014610311578063d33219b41461032657610135565b806320606b70116100fd57806320606b70146101fe57806324bc1a64146102135780632e0f691414610228578063328dd9821461024a5780633932abb11461027a5780633e4f49e61461028f57610135565b8063013cf08b1461013a57806302a251a31461017857806306fdde031461019a57806315373e3d146101bc57806317977c61146101de575b600080fd5b34801561014657600080fd5b5061015a61015536600461207c565b6103e5565b60405161016f99989796959493929190612f05565b60405180910390f35b34801561018457600080fd5b5061018d61043e565b60405161016f9190612c72565b3480156101a657600080fd5b506101af610445565b60405161016f9190612d2e565b3480156101c857600080fd5b506101dc6101d73660046120d4565b610471565b005b3480156101ea57600080fd5b5061018d6101f9366004611ef9565b610480565b34801561020a57600080fd5b5061018d610492565b34801561021f57600080fd5b5061018d6104a9565b34801561023457600080fd5b5061023d6104b8565b60405161016f9190612d12565b34801561025657600080fd5b5061026a61026536600461207c565b6104c7565b60405161016f9493929190612c25565b34801561028657600080fd5b5061018d610756565b34801561029b57600080fd5b506102af6102aa36600461207c565b61075b565b60405161016f9190612d20565b3480156102c857600080fd5b506101dc6102d736600461207c565b6108e6565b3480156102e857600080fd5b506101dc6102f7366004612104565b610b3a565b34801561030857600080fd5b5061018d610cca565b34801561031d57600080fd5b5061018d610ccf565b34801561033257600080fd5b5061023d610cde565b34801561034757600080fd5b5061018d610ced565b34801561035c57600080fd5b5061018d61036b366004611f1f565b610cf3565b34801561037c57600080fd5b506101dc61038b36600461207c565b611115565b34801561039c57600080fd5b5061018d611383565b3480156103b157600080fd5b506103c56103c036600461209a565b61138f565b60405161016f9190612e4f565b6101dc6103e036600461207c565b6113fe565b6003602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b619d805b90565b6040518060400160405280601081526020016f213632b73232b91023b7bb32b93737b960811b81525081565b61047c3383836115c3565b5050565b60046020526000908152604090205481565b60405161049e90612b16565b604051809103902081565b6a0de589d32bd931c400000090565b6001546001600160a01b031681565b6060806060806000600360008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561054957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161052b575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561059b57602002820191906000526020600020905b815481526020019060010190808311610587575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b8282101561066e5760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561065a5780601f1061062f5761010080835404028352916020019161065a565b820191906000526020600020905b81548152906001019060200180831161063d57829003601f168201915b5050505050815260200190600101906105c3565b50505050915080805480602002602001604051908101604052809291908181526020016000905b828210156107405760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561072c5780601f106107015761010080835404028352916020019161072c565b820191906000526020600020905b81548152906001019060200180831161070f57829003601f168201915b505050505081526020019060010190610695565b5050505090509450945094509450509193509193565b600190565b6000816002541015801561076f5750600082115b6107945760405162461bcd60e51b815260040161078b90612d9f565b60405180910390fd5b6000828152600360205260409020600b81015460ff16156107b95760029150506108e1565b806007015443116107ce5760009150506108e1565b806008015443116107e35760019150506108e1565b80600a0154816009015411158061080457506107fd6104a9565b8160090154105b156108135760039150506108e1565b60028101546108265760049150506108e1565b600b810154610100900460ff16156108425760079150506108e1565b6002810154600054604080516360d143f160e11b815290516108cb93926001600160a01b03169163c1a287e2916004808301926020929190829003018186803b15801561088e57600080fd5b505afa1580156108a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108c69190810190612029565b61178c565b42106108db5760069150506108e1565b60059150505b919050565b60006108f18261075b565b9050600781600781111561090157fe5b141561091f5760405162461bcd60e51b815260040161078b90612d6f565b6000828152600360205260409020610935610ccf565b60018054838201546001600160a01b039182169263782d6fe1929091169061095e9043906117b8565b6040518363ffffffff1660e01b815260040161097b929190612b47565b60206040518083038186803b15801561099357600080fd5b505afa1580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109cb919081019061216c565b6001600160601b0316106109f15760405162461bcd60e51b815260040161078b90612dff565b600b8101805460ff1916600117905560005b6003820154811015610afd576000546003830180546001600160a01b039092169163591fcdfe919084908110610a3557fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610a5d57fe5b9060005260206000200154856005018581548110610a7757fe5b90600052602060002001866006018681548110610a9057fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610abf959493929190612be4565b600060405180830381600087803b158015610ad957600080fd5b505af1158015610aed573d6000803e3d6000fd5b505060019092019150610a039050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610b2d9190612c72565b60405180910390a1505050565b6000604051610b4890612b16565b60408051918290038220828201909152601082526f213632b73232b91023b7bb32b93737b960811b6020909201919091527f91e201ef00ad9a3add8ca0089ef61a61c360692b61f2fa93680ba3a54016fd87610ba26117e0565b30604051602001610bb69493929190612c80565b6040516020818303038152906040528051906020012090506000604051610bdc90612b21565b604051908190038120610bf59189908990602001612cb5565b60405160208183030381529060405280519060200120905060008282604051602001610c22929190612ae5565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610c5f9493929190612cdd565b6020604051602081039080840390855afa158015610c81573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cb45760405162461bcd60e51b815260040161078b90612e3f565b610cbf818a8a6115c3565b505050505050505050565b600a90565b6a03796274caf64c7100000090565b6000546001600160a01b031681565b60025481565b6000610cfd610ccf565b600180546001600160a01b03169063782d6fe1903390610d1e9043906117b8565b6040518363ffffffff1660e01b8152600401610d3b929190612b2c565b60206040518083038186803b158015610d5357600080fd5b505afa158015610d67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d8b919081019061216c565b6001600160601b031611610db15760405162461bcd60e51b815260040161078b90612d3f565b84518651148015610dc3575083518651145b8015610dd0575082518651145b610dec5760405162461bcd60e51b815260040161078b90612d4f565b8551610e0a5760405162461bcd60e51b815260040161078b90612d7f565b610e12610cca565b86511115610e325760405162461bcd60e51b815260040161078b90612d5f565b336000908152600460205260409020548015610eaf576000610e538261075b565b90506001816007811115610e6357fe5b1415610e815760405162461bcd60e51b815260040161078b90612daf565b6000816007811115610e8f57fe5b1415610ead5760405162461bcd60e51b815260040161078b90612d8f565b505b6000610ebd436108c6610756565b90506000610ecd826108c661043e565b6002805460010190559050610ee0611943565b604051806101a001604052806002548152602001336001600160a01b03168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000151581526020016000151581525090508060036000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550604082015181600201556060820151816003019080519060200190610fc39291906119b8565b5060808201518051610fdf916004840191602090910190611a1d565b5060a08201518051610ffb916005840191602090910190611a64565b5060c08201518051611017916006840191602090910190611abd565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555061018082015181600b0160016101000a81548160ff02191690831515021790555090505080600001516004600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e6040516110fd99989796959493929190612e5d565b60405180910390a15193505050505b95945050505050565b60046111208261075b565b600781111561112b57fe5b146111485760405162461bcd60e51b815260040161078b90612e2f565b600081815260036020908152604080832083548251630d48571f60e31b815292519194936111a19342936001600160a01b0390931692636a42b8f892600480840193919291829003018186803b15801561088e57600080fd5b905060005b6003830154811015611349576113418360030182815481106111c457fe5b6000918252602090912001546004850180546001600160a01b0390921691849081106111ec57fe5b906000526020600020015485600501848154811061120657fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156112945780601f1061126957610100808354040283529160200191611294565b820191906000526020600020905b81548152906001019060200180831161127757829003601f168201915b50505050508660060185815481106112a857fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156113365780601f1061130b57610100808354040283529160200191611336565b820191906000526020600020905b81548152906001019060200180831161131957829003601f168201915b5050505050866117e4565b6001016111a6565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610b2d9085908490612f8b565b60405161049e90612b21565b611397611b16565b5060008281526003602090815260408083206001600160a01b0385168452600c018252918290208251606081018452905460ff80821615158352610100820416151592820192909252620100009091046001600160601b0316918101919091525b92915050565b60056114098261075b565b600781111561141457fe5b146114315760405162461bcd60e51b815260040161078b90612dbf565b6000818152600360205260408120600b8101805461ff001916610100179055905b6003820154811015611587576000546004830180546001600160a01b0390921691630825f38f91908490811061148457fe5b906000526020600020015484600301848154811061149e57fe5b6000918252602090912001546004860180546001600160a01b0390921691869081106114c657fe5b90600052602060002001548660050186815481106114e057fe5b906000526020600020018760060187815481106114f957fe5b9060005260206000200188600201546040518763ffffffff1660e01b8152600401611528959493929190612be4565b6000604051808303818588803b15801561154157600080fd5b505af1158015611555573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261157e9190810190612047565b50600101611452565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516115b79190612c72565b60405180910390a15050565b60016115ce8361075b565b60078111156115d957fe5b146115f65760405162461bcd60e51b815260040161078b90612e0f565b60008281526003602090815260408083206001600160a01b0387168452600c8101909252909120805460ff161561163f5760405162461bcd60e51b815260040161078b90612def565b600154600783015460405163782d6fe160e01b81526000926001600160a01b03169163782d6fe191611675918a91600401612b47565b60206040518083038186803b15801561168d57600080fd5b505afa1580156116a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116c5919081019061216c565b905083156116ee576116e48360090154826001600160601b031661178c565b600984015561170b565b61170583600a0154826001600160601b031661178c565b600a8401555b8154600160ff199091161761ff00191661010085151502176dffffffffffffffffffffffff00001916620100006001600160601b038316021782556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c469061177c908890889088908690612b55565b60405180910390a1505050505050565b6000828201838110156117b15760405162461bcd60e51b815260040161078b90612dcf565b9392505050565b6000828211156117da5760405162461bcd60e51b815260040161078b90612e1f565b50900390565b4690565b6000546040516001600160a01b039091169063f2b06537906118129088908890889088908890602001612b8a565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016118449190612c72565b60206040518083038186803b15801561185c57600080fd5b505afa158015611870573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611894919081019061200b565b156118b15760405162461bcd60e51b815260040161078b90612ddf565b600054604051633a66f90160e01b81526001600160a01b0390911690633a66f901906118e99088908890889088908890600401612b8a565b602060405180830381600087803b15801561190357600080fd5b505af1158015611917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061193b9190810190612029565b505050505050565b604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611a0d579160200282015b82811115611a0d57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906119d8565b50611a19929150611b36565b5090565b828054828255906000526020600020908101928215611a58579160200282015b82811115611a58578251825591602001919060010190611a3d565b50611a19929150611b5a565b828054828255906000526020600020908101928215611ab1579160200282015b82811115611ab15782518051611aa1918491602090910190611b74565b5091602001919060010190611a84565b50611a19929150611be1565b828054828255906000526020600020908101928215611b0a579160200282015b82811115611b0a5782518051611afa918491602090910190611b74565b5091602001919060010190611add565b50611a19929150611c04565b604080516060810182526000808252602082018190529181019190915290565b61044291905b80821115611a195780546001600160a01b0319168155600101611b3c565b61044291905b80821115611a195760008155600101611b60565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bb557805160ff1916838001178555611a58565b82800160010185558215611a585791820182811115611a58578251825591602001919060010190611a3d565b61044291905b80821115611a19576000611bfb8282611c27565b50600101611be7565b61044291905b80821115611a19576000611c1e8282611c27565b50600101611c0a565b50805460018160011615610100020316600290046000825580601f10611c4d5750611c6b565b601f016020900490600052602060002090810190611c6b9190611b5a565b50565b80356113f8816130d4565b600082601f830112611c8a57600080fd5b8135611c9d611c9882612fc0565b612f99565b91508181835260208401935060208101905083856020840282011115611cc257600080fd5b60005b83811015611cee5781611cd88882611c6e565b8452506020928301929190910190600101611cc5565b5050505092915050565b600082601f830112611d0957600080fd5b8135611d17611c9882612fc0565b81815260209384019390925082018360005b83811015611cee5781358601611d3f8882611e4e565b8452506020928301929190910190600101611d29565b600082601f830112611d6657600080fd5b8135611d74611c9882612fc0565b81815260209384019390925082018360005b83811015611cee5781358601611d9c8882611e4e565b8452506020928301929190910190600101611d86565b600082601f830112611dc357600080fd5b8135611dd1611c9882612fc0565b91508181835260208401935060208101905083856020840282011115611df657600080fd5b60005b83811015611cee5781611e0c8882611e38565b8452506020928301929190910190600101611df9565b80356113f8816130e8565b80516113f8816130e8565b80356113f8816130f1565b80516113f8816130f1565b600082601f830112611e5f57600080fd5b8135611e6d611c9882612fe1565b91508082526020830160208301858383011115611e8957600080fd5b611e94838284613088565b50505092915050565b600082601f830112611eae57600080fd5b8151611ebc611c9882612fe1565b91508082526020830160208301858383011115611ed857600080fd5b611e94838284613094565b80356113f8816130fa565b80516113f881613103565b600060208284031215611f0b57600080fd5b6000611f178484611c6e565b949350505050565b600080600080600060a08688031215611f3757600080fd5b853567ffffffffffffffff811115611f4e57600080fd5b611f5a88828901611c79565b955050602086013567ffffffffffffffff811115611f7757600080fd5b611f8388828901611db2565b945050604086013567ffffffffffffffff811115611fa057600080fd5b611fac88828901611d55565b935050606086013567ffffffffffffffff811115611fc957600080fd5b611fd588828901611cf8565b925050608086013567ffffffffffffffff811115611ff257600080fd5b611ffe88828901611e4e565b9150509295509295909350565b60006020828403121561201d57600080fd5b6000611f178484611e2d565b60006020828403121561203b57600080fd5b6000611f178484611e43565b60006020828403121561205957600080fd5b815167ffffffffffffffff81111561207057600080fd5b611f1784828501611e9d565b60006020828403121561208e57600080fd5b6000611f178484611e38565b600080604083850312156120ad57600080fd5b60006120b98585611e38565b92505060206120ca85828601611c6e565b9150509250929050565b600080604083850312156120e757600080fd5b60006120f38585611e38565b92505060206120ca85828601611e22565b600080600080600060a0868803121561211c57600080fd5b60006121288888611e38565b955050602061213988828901611e22565b945050604061214a88828901611ee3565b935050606061215b88828901611e38565b9250506080611ffe88828901611e38565b60006020828403121561217e57600080fd5b6000611f178484611eee565b600061219683836121c5565b505060200190565b60006117b18383612367565b6000612196838361234d565b6121bf81613060565b82525050565b6121bf81613028565b60006121d98261301b565b6121e3818561301f565b93506121ee83613009565b8060005b8381101561221c578151612206888261218a565b975061221183613009565b9250506001016121f2565b509495945050505050565b60006122328261301b565b61223c818561301f565b93508360208202850161224e85613009565b8060005b85811015612288578484038952815161226b858261219e565b945061227683613009565b60209a909a0199925050600101612252565b5091979650505050505050565b60006122a08261301b565b6122aa818561301f565b9350836020820285016122bc85613009565b8060005b8581101561228857848403895281516122d9858261219e565b94506122e483613009565b60209a909a01999250506001016122c0565b60006123018261301b565b61230b818561301f565b935061231683613009565b8060005b8381101561221c57815161232e88826121aa565b975061233983613009565b92505060010161231a565b6121bf81613033565b6121bf81610442565b6121bf61236282610442565b610442565b60006123728261301b565b61237c818561301f565b935061238c818560208601613094565b612395816130c0565b9093019392505050565b6000815460018116600081146123bc57600181146123e257612421565b607f60028304166123cd818761301f565b60ff1984168152955050602085019250612421565b600282046123f0818761301f565b95506123fb8561300f565b60005b8281101561241a578154888201526001909101906020016123fe565b8701945050505b505092915050565b6121bf81613067565b6121bf81613072565b6000612448603a8361301f565b7f476f7665726e6f723a3a70726f706f73653a2070726f706f73657220766f746581527f732062656c6f772070726f706f73616c207468726573686f6c64000000000000602082015260400192915050565b60006124a7603f8361301f565b7f476f7665726e6f723a3a70726f706f73653a2070726f706f73616c2066756e6381527f74696f6e20696e666f726d6174696f6e206172697479206d69736d6174636800602082015260400192915050565b600061250660238361301f565b7f476f7665726e6f723a3a70726f706f73653a20746f6f206d616e7920616374698152626f6e7360e81b602082015260400192915050565b600061254b60318361301f565b7f476f7665726e6f723a3a63616e63656c3a2063616e6e6f742063616e63656c20815270195e1958dd5d1959081c1c9bdc1bdcd85b607a1b602082015260400192915050565b600061259e6002836108e1565b61190160f01b815260020192915050565b60006125bc60278361301f565b7f476f7665726e6f723a3a70726f706f73653a206d7573742070726f7669646520815266616374696f6e7360c81b602082015260400192915050565b600061260560548361301f565b7f476f7665726e6f723a3a70726f706f73653a206f6e65206c6976652070726f7081527f6f73616c207065722070726f706f7365722c20666f756e6420616e20616c726560208201527318591e481c195b991a5b99c81c1c9bdc1bdcd85b60621b604082015260600192915050565b600061268160248361301f565b7f476f7665726e6f723a3a73746174653a20696e76616c69642070726f706f73618152631b081a5960e21b602082015260400192915050565b60006126c760538361301f565b7f476f7665726e6f723a3a70726f706f73653a206f6e65206c6976652070726f7081527f6f73616c207065722070726f706f7365722c20666f756e6420616e20616c726560208201527218591e481858dd1a5d99481c1c9bdc1bdcd85b606a1b604082015260600192915050565b600061274260408361301f565b7f476f7665726e6f723a3a657865637574653a2070726f706f73616c2063616e2081527f6f6e6c7920626520657865637574656420696620697420697320717565756564602082015260400192915050565b60006127a160118361301f565b706164646974696f6e206f766572666c6f7760781b815260200192915050565b60006127ce6043836108e1565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201526263742960e81b604082015260430192915050565b60006128396027836108e1565b7f42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c20738152667570706f72742960c81b602082015260270192915050565b6000612882603f8361301f565b7f476f7665726e6f723a3a5f71756575654f725265766572743a2070726f706f7381527f616c20616374696f6e20616c7265616479207175657565642061742065746100602082015260400192915050565b60006128e160288361301f565b7f476f7665726e6f723a3a5f63617374566f74653a20766f74657220616c726561815267191e481d9bdd195960c21b602082015260400192915050565b600061292b602a8361301f565b7f476f7665726e6f723a3a63616e63656c3a2070726f706f7365722061626f7665815269081d1a1c995cda1bdb1960b21b602082015260400192915050565b600061297760258361301f565b7f476f7665726e6f723a3a5f63617374566f74653a20766f74696e6720697320638152641b1bdcd95960da1b602082015260400192915050565b60006129be60158361301f565b747375627472616374696f6e20756e646572666c6f7760581b815260200192915050565b60006129ef603f8361301f565b7f476f7665726e6f723a3a71756575653a2070726f706f73616c2063616e206f6e81527f6c79206265207175657565642069662069742069732073756363656564656400602082015260400192915050565b6000612a4e602a8361301f565b7f476f7665726e6f723a3a63617374566f746542795369673a20696e76616c6964815269207369676e617475726560b01b602082015260400192915050565b80516060830190612a9e8482612344565b506020820151612ab16020850182612344565b506040820151612ac46040850182612adc565b50505050565b6121bf8161304e565b6121bf8161307d565b6121bf81613054565b6000612af082612591565b9150612afc8285612356565b602082019150612b0c8284612356565b5060200192915050565b60006113f8826127c1565b60006113f88261282c565b60408101612b3a82856121b6565b6117b1602083018461234d565b60408101612b3a82856121c5565b60808101612b6382876121c5565b612b70602083018661234d565b612b7d6040830185612344565b61110c6060830184612ad3565b60a08101612b9882886121c5565b612ba5602083018761234d565b8181036040830152612bb78186612367565b90508181036060830152612bcb8185612367565b9050612bda608083018461234d565b9695505050505050565b60a08101612bf282886121c5565b612bff602083018761234d565b8181036040830152612c11818661239f565b90508181036060830152612bcb818561239f565b60808082528101612c3681876121ce565b90508181036020830152612c4a81866122f6565b90508181036040830152612c5e8185612295565b90508181036060830152612bda8184612227565b602081016113f8828461234d565b60808101612c8e828761234d565b612c9b602083018661234d565b612ca8604083018561234d565b61110c60608301846121c5565b60608101612cc3828661234d565b612cd0602083018561234d565b611f176040830184612344565b60808101612ceb828761234d565b612cf86020830186612aca565b612d05604083018561234d565b61110c606083018461234d565b602081016113f88284612429565b602081016113f88284612432565b602080825281016117b18184612367565b602080825281016113f88161243b565b602080825281016113f88161249a565b602080825281016113f8816124f9565b602080825281016113f88161253e565b602080825281016113f8816125af565b602080825281016113f8816125f8565b602080825281016113f881612674565b602080825281016113f8816126ba565b602080825281016113f881612735565b602080825281016113f881612794565b602080825281016113f881612875565b602080825281016113f8816128d4565b602080825281016113f88161291e565b602080825281016113f88161296a565b602080825281016113f8816129b1565b602080825281016113f8816129e2565b602080825281016113f881612a41565b606081016113f88284612a8d565b6101208101612e6c828c61234d565b612e79602083018b6121b6565b8181036040830152612e8b818a6121ce565b90508181036060830152612e9f81896122f6565b90508181036080830152612eb38188612295565b905081810360a0830152612ec78187612227565b9050612ed660c083018661234d565b612ee360e083018561234d565b818103610100830152612ef68184612367565b9b9a5050505050505050505050565b6101208101612f14828c61234d565b612f21602083018b6121c5565b612f2e604083018a61234d565b612f3b606083018961234d565b612f48608083018861234d565b612f5560a083018761234d565b612f6260c083018661234d565b612f6f60e0830185612344565b612f7d610100830184612344565b9a9950505050505050505050565b60408101612b3a828561234d565b60405181810167ffffffffffffffff81118282101715612fb857600080fd5b604052919050565b600067ffffffffffffffff821115612fd757600080fd5b5060209081020190565b600067ffffffffffffffff821115612ff857600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b60006113f882613042565b151590565b806108e1816130ca565b6001600160a01b031690565b60ff1690565b6001600160601b031690565b60006113f8825b60006113f882613028565b60006113f882613038565b60006113f882613054565b82818337506000910152565b60005b838110156130af578181015183820152602001613097565b83811115612ac45750506000910152565b601f01601f191690565b60088110611c6b57fe5b6130dd81613028565b8114611c6b57600080fd5b6130dd81613033565b6130dd81610442565b6130dd8161304e565b6130dd8161305456fea365627a7a723158202d7cb95a559f5a3c953de55920b81f4467f5e1ef635284839cc5c4d8012a3e5e6c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "60:14622:4:-;;;5062:155;8:9:-1;5:2;;;30:1;27;20:12;5:2;5062:155:4;;;;;;;;;;;;;;;;;;;;;5128:8;:39;;-1:-1:-1;;;;;5128:39:4;;;-1:-1:-1;;;;;;5128:39:4;;;;;;;;5177:33;;;;;;;;;;;60:14622;;5:134:-1;83:13;;101:33;83:13;101:33;;;68:71;;;;;146:399;;;278:2;266:9;257:7;253:23;249:32;246:2;;;294:1;291;284:12;246:2;329:1;346:64;402:7;382:9;346:64;;;336:74;;308:108;447:2;465:64;521:7;512:6;501:9;497:22;465:64;;;455:74;;426:109;240:305;;;;;;552:91;;-1:-1;;;;;712:54;;614:24;695:76;778:117;847:24;865:5;847:24;;;840:5;837:35;827:2;;886:1;883;876:12;827:2;821:74;;;60:14622:4;;;;;;",
  "deployedSourceMap": "60:14622:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3600:45;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3600:45:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1054:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1054:83:4;;;:::i;:::-;;;;;;;;126:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;126:48:4;;;:::i;:::-;;;;;;;;12276:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12276:125:4;;;;;;;;:::i;:::-;;3706:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3706:52:4;;;;;;;;:::i;3828:136::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3828:136:4;;;:::i;313:88::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;313:88:4;;;:::i;1347:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:28:4;;;:::i;:::-;;;;;;;;10587:376;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10587:376:4;;;;;;;;:::i;:::-;;;;;;;;;;;895:78;;8:9:-1;5:2;;;30:1;27;20:12;5:2;895:78:4;;;:::i;11156:1114::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11156:1114:4;;;;;;;;:::i;:::-;;;;;;;;9693:888;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9693:888:4;;;;;;;;:::i;12407:841::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12407:841:4;;;;;;;;:::i;702:89::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;702:89:4;;;:::i;508:93::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:93:4;;;:::i;1247:33::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1247:33:4;;;:::i;1428:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1428:28:4;;;:::i;5223:2567::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5223:2567:4;;;;;;;;:::i;7796:701::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7796:701:4;;;;;;;;:::i;4051:108::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4051:108:4;;;:::i;10969:181::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10969:181:4;;;;;;;;:::i;:::-;;;;;;;;8993:694;;;;;;;;;:::i;3600:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3600:45:4;;;;;;;;;;;;;;;;;;;;;;:::o;1054:83::-;1125:5;1054:83;;:::o;126:48::-;;;;;;;;;;;;;;-1:-1:-1;;;126:48:4;;;;:::o;12276:125::-;12352:42;12362:10;12374;12386:7;12352:9;:42::i;:::-;12276:125;;:::o;3706:52::-;;;;;;;;;;;;;:::o;3828:136::-;3870:94;;;;;;;;;;;;;;3828:136;:::o;313:88::-;383:11;313:88;:::o;1347:28::-;;;-1:-1:-1;;;;;1347:28:4;;:::o;10587:376::-;10685:24;10723:23;10760:26;10800:24;10849:18;10870:9;:21;10880:10;10870:21;;;;;;;;;;;10849:42;;10909:1;:9;;10920:1;:8;;10930:1;:12;;10944:1;:11;;10901:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10901:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10901:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10901:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10587:376;;;;;:::o;895:78::-;965:1;895:78;:::o;11156:1114::-;11212:13;11275:10;11258:13;;:27;;:45;;;;;11302:1;11289:10;:14;11258:45;11237:128;;;;-1:-1:-1;;;11237:128:4;;;;;;;;;;;;;;;;;11375:25;11403:21;;;:9;:21;;;;;11438:17;;;;;;11434:830;;;11478:22;11471:29;;;;;11434:830;11537:8;:19;;;11521:12;:35;11517:747;;11579:21;11572:28;;;;;11517:747;11637:8;:17;;;11621:12;:33;11617:647;;11677:20;11670:27;;;;;11617:647;11752:8;:21;;;11731:8;:17;;;:42;;:91;;;;11809:13;:11;:13::i;:::-;11789:8;:17;;;:33;11731:91;11714:550;;;11854:22;11847:29;;;;;11714:550;11897:12;;;;11893:371;;11937:23;11930:30;;;;;11893:371;11981:17;;;;;;;;;11977:287;;;12021:22;12014:29;;;;;11977:287;12104:12;;;;12118:8;;:23;;;-1:-1:-1;;;12118:23:4;;;;12096:46;;12104:12;-1:-1:-1;;;;;12118:8:4;;:21;;:23;;;;;;;;;;;;;;:8;:23;;;5:2:-1;;;;30:1;27;20:12;5:2;12118:23:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12118:23:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12118:23:4;;;;;;;;;12096:7;:46::i;:::-;12077:15;:65;12060:204;;12174:21;12167:28;;;;;12060:204;12233:20;12226:27;;;11156:1114;;;;:::o;9693:888::-;9746:19;9768:17;9774:10;9768:5;:17::i;:::-;9746:39;-1:-1:-1;9825:22:4;9816:5;:31;;;;;;;;;;9795:127;;;;-1:-1:-1;;;9795:127:4;;;;;;;;;9933:25;9961:21;;;:9;:21;;;;;10098:19;:17;:19::i;:::-;10013:7;;;10035:17;;;;-1:-1:-1;;;;;10013:7:4;;;;:21;;10035:17;;;;10054:24;;10062:12;;10054:7;:24::i;:::-;10013:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10013:66:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10013:66:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10013:66:4;;;;;;;;;-1:-1:-1;;;;;10013:104:4;;9992:193;;;;-1:-1:-1;;;9992:193:4;;;;;;;;;10196:17;;;:24;;-1:-1:-1;;10196:24:4;10216:4;10196:24;;;:17;10230:301;10254:16;;;:23;10250:27;;10230:301;;;10298:8;;10342:16;;;:19;;-1:-1:-1;;;;;10298:8:4;;;;:26;;10342:16;10359:1;;10342:19;;;;;;;;;;;;;;;;10379:15;;;:18;;-1:-1:-1;;;;;10342:19:4;;;;10395:1;;10379:18;;;;;;;;;;;;;;10415:8;:19;;10435:1;10415:22;;;;;;;;;;;;;;;10455:8;:18;;10474:1;10455:21;;;;;;;;;;;;;;;10494:8;:12;;;10298:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10298:222:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;10279:3:4;;;;;-1:-1:-1;10230:301:4;;-1:-1:-1;10230:301:4;;;10546:28;10563:10;10546:28;;;;;;;;;;;;;;;9693:888;;;:::o;12407:841::-;12558:23;3870:94;;;;;;;;;;;;;;;;12684:4;;;;;;;;;-1:-1:-1;;;12684:4:4;;;;;;;;12668:22;12708:13;:11;:13::i;:::-;12747:4;12607:159;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12607:159:4;;;12584:192;;;;;;12558:218;;12786:18;4093:66;;;;;;;;;;;;;;;12830:48;;12858:10;;12870:7;;12830:48;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12830:48:4;;;12807:81;;;;;;12786:102;;12898:14;12967:15;12984:10;12938:57;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;12938:57:4;;;12915:90;;;;;;12898:107;;13015:17;13035:26;13045:6;13053:1;13056;13059;13035:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;13035:26:4;;-1:-1:-1;;13035:26:4;;;-1:-1:-1;;;;;;;13092:23:4;;13071:112;;;;-1:-1:-1;;;13071:112:4;;;;;;;;;13200:41;13210:9;13221:10;13233:7;13200:9;:41::i;:::-;13193:48;;;;12407:841;;;;;:::o;702:89::-;782:2;702:89;:::o;508:93::-;584:10;508:93;:::o;1247:33::-;;;-1:-1:-1;;;;;1247:33:4;;:::o;1428:28::-;;;;:::o;5223:2567::-;5434:7;5552:19;:17;:19::i;:::-;5474:7;;;-1:-1:-1;;;;;5474:7:4;;:21;;5496:10;;5508:24;;5516:12;;5508:7;:24::i;:::-;5474:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5474:59:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5474:59:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5474:59:4;;;;;;;;;-1:-1:-1;;;;;5474:97:4;;5453:202;;;;-1:-1:-1;;;5453:202:4;;;;;;;;;5704:6;:13;5686:7;:14;:31;:86;;;;;5755:10;:17;5737:7;:14;:35;5686:86;:140;;;;;5810:9;:16;5792:7;:14;:34;5686:140;5665:250;;;;-1:-1:-1;;;5665:250:4;;;;;;;;;5933:14;;5925:71;;;;-1:-1:-1;;;5925:71:4;;;;;;;;;6045:23;:21;:23::i;:::-;6027:7;:14;:41;;6006:123;;;;-1:-1:-1;;;6006:123:4;;;;;;;;;6185:10;6140:24;6167:29;;;:17;:29;;;;;;6210:21;;6206:568;;6247:42;6292:53;6315:16;6292:5;:53::i;:::-;6247:98;-1:-1:-1;6416:20:4;6384:28;:52;;;;;;;;;;6359:194;;;;-1:-1:-1;;;6359:194:4;;;;;;;;;6624:21;6592:28;:53;;;;;;;;;;6567:196;;;;-1:-1:-1;;;6567:196:4;;;;;;;;;6206:568;;6784:18;6805:36;6813:12;6827:13;:11;:13::i;6805:36::-;6784:57;;6851:16;6870:35;6878:10;6890:14;:12;:14::i;6870:35::-;6916:13;:15;;;;;;6851:54;-1:-1:-1;6941:27:4;;:::i;:::-;6971:413;;;;;;;;6998:13;;6971:413;;;;7035:10;-1:-1:-1;;;;;6971:413:4;;;;;7064:1;6971:413;;;;7088:7;6971:413;;;;7117:6;6971:413;;;;7149:10;6971:413;;;;7184:9;6971:413;;;;7219:10;6971:413;;;;7253:8;6971:413;;;;7285:1;6971:413;;;;7314:1;6971:413;;;;7339:5;6971:413;;;;;;7368:5;6971:413;;;;;6941:443;;7423:11;7395:9;:25;7405:11;:14;;;7395:25;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7395:39:4;;;;;-1:-1:-1;;;;;7395:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7395:39:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7395:39:4;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7395:39:4;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7486:11;:14;;;7444:17;:39;7462:11;:20;;;-1:-1:-1;;;;;7444:39:4;-1:-1:-1;;;;;7444:39:4;;;;;;;;;;;;:56;;;;7516:236;7545:11;:14;;;7573:10;7597:7;7618:6;7638:10;7662:9;7685:10;7709:8;7731:11;7516:236;;;;;;;;;;;;;;;;;;;;;;;7769:14;;-1:-1:-1;;;;5223:2567:4;;;;;;;;:::o;7796:701::-;7890:23;7869:17;7875:10;7869:5;:17::i;:::-;:44;;;;;;;;;7848:154;;;;-1:-1:-1;;;7848:154:4;;;;;;;;;8012:25;8040:21;;;:9;:21;;;;;;;;8110:8;;:16;;-1:-1:-1;;;8110:16:4;;;;8040:21;;8012:25;8085:42;;8093:15;;-1:-1:-1;;;;;8110:8:4;;;;:14;;:16;;;;;8040:21;;8110:16;;;;;;:8;:16;;;5:2:-1;;;;30:1;27;20:12;8085:42:4;8071:56;-1:-1:-1;8142:9:4;8137:280;8161:16;;;:23;8157:27;;8137:280;;;8205:201;8237:8;:16;;8254:1;8237:19;;;;;;;;;;;;;;;;;;8274:15;;;:18;;-1:-1:-1;;;;;8237:19:4;;;;8290:1;;8274:18;;;;;;;;;;;;;;8310:8;:19;;8330:1;8310:22;;;;;;;;;;;;;;;;;;8205:201;;;;;;;-1:-1:-1;;8205:201:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8310:22;8205:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8350:8;:18;;8369:1;8350:21;;;;;;;;;;;;;;;;;;8205:201;;;;;;;-1:-1:-1;;8205:201:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8350:21;8205:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8389:3;8205:14;:201::i;:::-;8186:3;;8137:280;;;-1:-1:-1;8426:12:4;;;:18;;;8459:31;;;;;;8474:10;;8441:3;;8459:31;;4051:108;4093:66;;;;;;10969:181;11069:14;;:::i;:::-;-1:-1:-1;11106:21:4;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;11106:37:4;;;;:30;;:37;;;;;;11099:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11099:44:4;;;;;;;;10969:181;;;;;:::o;8993:694::-;9097:20;9076:17;9082:10;9076:5;:17::i;:::-;:41;;;;;;;;;9055:152;;;;-1:-1:-1;;;9055:152:4;;;;;;;;;9217:25;9245:21;;;:9;:21;;;;;9276:17;;;:24;;-1:-1:-1;;9276:24:4;;;;;9245:21;9310:328;9334:16;;;:23;9330:27;;9310:328;;;9378:8;;9412:15;;;:18;;-1:-1:-1;;;;;9378:8:4;;;;:27;;9412:15;9428:1;;9412:18;;;;;;;;;;;;;;9449:8;:16;;9466:1;9449:19;;;;;;;;;;;;;;;;;;9486:15;;;:18;;-1:-1:-1;;;;;9449:19:4;;;;9502:1;;9486:18;;;;;;;;;;;;;;9522:8;:19;;9542:1;9522:22;;;;;;;;;;;;;;;9562:8;:18;;9581:1;9562:21;;;;;;;;;;;;;;;9601:8;:12;;;9378:249;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9378:249:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9378:249:4;;;;;;;39:16:-1;36:1;17:17;2:54;101:4;9378:249:4;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;9378:249:4;;;;;;;;;-1:-1:-1;9359:3:4;;9310:328;;;;9652:28;9669:10;9652:28;;;;;;;;;;;;;;;8993:694;;:::o;13254:916::-;13413:20;13392:17;13398:10;13392:5;:17::i;:::-;:41;;;;;;;;;13371:125;;;;-1:-1:-1;;;13371:125:4;;;;;;;;;13506:25;13534:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;13591:24:4;;;;:17;;;:24;;;;;;13646:16;;;;:25;13625:112;;;;-1:-1:-1;;;13625:112:4;;;;;;;;;13762:7;;13791:19;;;;13762:49;;-1:-1:-1;;;13762:49:4;;13747:12;;-1:-1:-1;;;;;13762:7:4;;:21;;:49;;13784:5;;13762:49;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13762:49:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13762:49:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13762:49:4;;;;;;;;;13747:64;;13826:7;13822:183;;;13869:33;13877:8;:17;;;13896:5;-1:-1:-1;;;;;13869:33:4;:7;:33::i;:::-;13849:17;;;:53;13822:183;;;13957:37;13965:8;:21;;;13988:5;-1:-1:-1;;;;;13957:37:4;:7;:37::i;:::-;13933:21;;;:61;13822:183;14015:23;;14034:4;-1:-1:-1;;14015:23:4;;;;-1:-1:-1;;14048:25:4;14015:23;14048:25;;;;;-1:-1:-1;;14083:21:4;;-1:-1:-1;;;;;14083:21:4;;;;;;14120:43;;;;;;14129:5;;14136:10;;14048:25;;14083:21;;14120:43;;;;;;;;;;13254:916;;;;;;:::o;14176:169::-;14238:7;14269:5;;;14292:6;;;;14284:36;;;;-1:-1:-1;;;14284:36:4;;;;;;;;;14337:1;14176:169;-1:-1:-1;;;14176:169:4:o;14351:150::-;14413:7;14445:1;14440;:6;;14432:40;;;;-1:-1:-1;;;14432:40:4;;;;;;;;;-1:-1:-1;14489:5:4;;;14351:150::o;14507:173::-;14631:9;14507:173;:::o;8503:484::-;8702:8;;8757:47;;-1:-1:-1;;;;;8702:8:4;;;;:27;;8757:47;;8768:6;;8776:5;;8783:9;;8794:4;;8800:3;;8757:47;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8757:47:4;;;8747:58;;;;;;8702:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8702:117:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8702:117:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8702:117:4;;;;;;;;;8701:118;8680:228;;;;-1:-1:-1;;;8680:228:4;;;;;;;;;8918:8;;:62;;-1:-1:-1;;;8918:62:4;;-1:-1:-1;;;;;8918:8:4;;;;:25;;:62;;8944:6;;8952:5;;8959:9;;8970:4;;8976:3;;8918:62;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8918:62:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8918:62:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8918:62:4;;;;;;;;;;8503:484;;;;;:::o;60:14622::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;60:14622:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;60:14622:4;-1:-1:-1;;;;;60:14622:4;;;;;;;;;;;-1:-1:-1;60:14622:4;;;;;;;-1:-1:-1;60:14622:4;;;-1:-1:-1;60:14622:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;60:14622:4;;;-1:-1:-1;60:14622:4;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;60:14622:4;;;-1:-1:-1;60:14622:4;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;60:14622:4;;;-1:-1:-1;60:14622:4;:::i;:::-;;;;;;;;;-1:-1:-1;60:14622:4;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;60:14622:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;160:707;;277:3;270:4;262:6;258:17;254:27;244:2;;295:1;292;285:12;244:2;332:6;319:20;354:80;369:64;426:6;369:64;;;354:80;;;345:89;;451:5;476:6;469:5;462:21;506:4;498:6;494:17;484:27;;528:4;523:3;519:14;512:21;;581:6;628:3;620:4;612:6;608:17;603:3;599:27;596:36;593:2;;;645:1;642;635:12;593:2;670:1;655:206;680:6;677:1;674:13;655:206;;;738:3;760:37;793:3;781:10;760:37;;;748:50;;-1:-1;821:4;812:14;;;;840;;;;;702:1;695:9;655:206;;;659:14;237:630;;;;;;;;891:693;;1013:3;1006:4;998:6;994:17;990:27;980:2;;1031:1;1028;1021:12;980:2;1068:6;1055:20;1090:85;1105:69;1167:6;1105:69;;1090:85;1203:21;;;1247:4;1235:17;;;;1081:94;;-1:-1;1260:14;;1235:17;1355:1;1340:238;1365:6;1362:1;1359:13;1340:238;;;1448:3;1435:17;1427:6;1423:30;1472:42;1510:3;1498:10;1472:42;;;1460:55;;-1:-1;1538:4;1529:14;;;;1557;;;;;1387:1;1380:9;1340:238;;1609:696;;1732:3;1725:4;1717:6;1713:17;1709:27;1699:2;;1750:1;1747;1740:12;1699:2;1787:6;1774:20;1809:86;1824:70;1887:6;1824:70;;1809:86;1923:21;;;1967:4;1955:17;;;;1800:95;;-1:-1;1980:14;;1955:17;2075:1;2060:239;2085:6;2082:1;2079:13;2060:239;;;2168:3;2155:17;2147:6;2143:30;2192:43;2231:3;2219:10;2192:43;;;2180:56;;-1:-1;2259:4;2250:14;;;;2278;;;;;2107:1;2100:9;2060:239;;2331:707;;2448:3;2441:4;2433:6;2429:17;2425:27;2415:2;;2466:1;2463;2456:12;2415:2;2503:6;2490:20;2525:80;2540:64;2597:6;2540:64;;2525:80;2516:89;;2622:5;2647:6;2640:5;2633:21;2677:4;2669:6;2665:17;2655:27;;2699:4;2694:3;2690:14;2683:21;;2752:6;2799:3;2791:4;2783:6;2779:17;2774:3;2770:27;2767:36;2764:2;;;2816:1;2813;2806:12;2764:2;2841:1;2826:206;2851:6;2848:1;2845:13;2826:206;;;2909:3;2931:37;2964:3;2952:10;2931:37;;;2919:50;;-1:-1;2992:4;2983:14;;;;3011;;;;;2873:1;2866:9;2826:206;;3046:124;3110:20;;3135:30;3110:20;3135:30;;3177:128;3252:13;;3270:30;3252:13;3270:30;;3312:130;3379:20;;3404:33;3379:20;3404:33;;3449:134;3527:13;;3545:33;3527:13;3545:33;;3591:432;;3688:3;3681:4;3673:6;3669:17;3665:27;3655:2;;3706:1;3703;3696:12;3655:2;3743:6;3730:20;3765:60;3780:44;3817:6;3780:44;;3765:60;3756:69;;3845:6;3838:5;3831:21;3881:4;3873:6;3869:17;3914:4;3907:5;3903:16;3949:3;3940:6;3935:3;3931:16;3928:25;3925:2;;;3966:1;3963;3956:12;3925:2;3976:41;4010:6;4005:3;4000;3976:41;;;3648:375;;;;;;;;4032:442;;4144:3;4137:4;4129:6;4125:17;4121:27;4111:2;;4162:1;4159;4152:12;4111:2;4192:6;4186:13;4214:64;4229:48;4270:6;4229:48;;4214:64;4205:73;;4298:6;4291:5;4284:21;4334:4;4326:6;4322:17;4367:4;4360:5;4356:16;4402:3;4393:6;4388:3;4384:16;4381:25;4378:2;;;4419:1;4416;4409:12;4378:2;4429:39;4461:6;4456:3;4451;4429:39;;5654:126;5719:20;;5744:31;5719:20;5744:31;;5787:132;5864:13;;5882:32;5864:13;5882:32;;5926:241;;6030:2;6018:9;6009:7;6005:23;6001:32;5998:2;;;6046:1;6043;6036:12;5998:2;6081:1;6098:53;6143:7;6123:9;6098:53;;;6088:63;5992:175;-1:-1;;;;5992:175;6174:1415;;;;;;6467:3;6455:9;6446:7;6442:23;6438:33;6435:2;;;6484:1;6481;6474:12;6435:2;6519:31;;6570:18;6559:30;;6556:2;;;6602:1;6599;6592:12;6556:2;6622:78;6692:7;6683:6;6672:9;6668:22;6622:78;;;6612:88;;6498:208;6765:2;6754:9;6750:18;6737:32;6789:18;6781:6;6778:30;6775:2;;;6821:1;6818;6811:12;6775:2;6841:78;6911:7;6902:6;6891:9;6887:22;6841:78;;;6831:88;;6716:209;6984:2;6973:9;6969:18;6956:32;7008:18;7000:6;6997:30;6994:2;;;7040:1;7037;7030:12;6994:2;7060:84;7136:7;7127:6;7116:9;7112:22;7060:84;;;7050:94;;6935:215;7209:2;7198:9;7194:18;7181:32;7233:18;7225:6;7222:30;7219:2;;;7265:1;7262;7255:12;7219:2;7285:83;7360:7;7351:6;7340:9;7336:22;7285:83;;;7275:93;;7160:214;7433:3;7422:9;7418:19;7405:33;7458:18;7450:6;7447:30;7444:2;;;7490:1;7487;7480:12;7444:2;7510:63;7565:7;7556:6;7545:9;7541:22;7510:63;;;7500:73;;7384:195;6429:1160;;;;;;;;;7596:257;;7708:2;7696:9;7687:7;7683:23;7679:32;7676:2;;;7724:1;7721;7714:12;7676:2;7759:1;7776:61;7829:7;7809:9;7776:61;;7860:263;;7975:2;7963:9;7954:7;7950:23;7946:32;7943:2;;;7991:1;7988;7981:12;7943:2;8026:1;8043:64;8099:7;8079:9;8043:64;;8130:360;;8254:2;8242:9;8233:7;8229:23;8225:32;8222:2;;;8270:1;8267;8260:12;8222:2;8305:24;;8349:18;8338:30;;8335:2;;;8381:1;8378;8371:12;8335:2;8401:73;8466:7;8457:6;8446:9;8442:22;8401:73;;8497:241;;8601:2;8589:9;8580:7;8576:23;8572:32;8569:2;;;8617:1;8614;8607:12;8569:2;8652:1;8669:53;8714:7;8694:9;8669:53;;9015:366;;;9136:2;9124:9;9115:7;9111:23;9107:32;9104:2;;;9152:1;9149;9142:12;9104:2;9187:1;9204:53;9249:7;9229:9;9204:53;;;9194:63;;9166:97;9294:2;9312:53;9357:7;9348:6;9337:9;9333:22;9312:53;;;9302:63;;9273:98;9098:283;;;;;;9388:360;;;9506:2;9494:9;9485:7;9481:23;9477:32;9474:2;;;9522:1;9519;9512:12;9474:2;9557:1;9574:53;9619:7;9599:9;9574:53;;;9564:63;;9536:97;9664:2;9682:50;9724:7;9715:6;9704:9;9700:22;9682:50;;9755:733;;;;;;9922:3;9910:9;9901:7;9897:23;9893:33;9890:2;;;9939:1;9936;9929:12;9890:2;9974:1;9991:53;10036:7;10016:9;9991:53;;;9981:63;;9953:97;10081:2;10099:50;10141:7;10132:6;10121:9;10117:22;10099:50;;;10089:60;;10060:95;10186:2;10204:51;10247:7;10238:6;10227:9;10223:22;10204:51;;;10194:61;;10165:96;10292:2;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;;;10300:63;;10271:98;10400:3;10419:53;10464:7;10455:6;10444:9;10440:22;10419:53;;10495:261;;10609:2;10597:9;10588:7;10584:23;10580:32;10577:2;;;10625:1;10622;10615:12;10577:2;10660:1;10677:63;10732:7;10712:9;10677:63;;10764:173;;10851:46;10893:3;10885:6;10851:46;;;-1:-1;;10926:4;10917:14;;10844:93;10946:177;;11057:60;11113:3;11105:6;11057:60;;11322:173;;11409:46;11451:3;11443:6;11409:46;;11503:142;11594:45;11633:5;11594:45;;;11589:3;11582:58;11576:69;;;11652:103;11725:24;11743:5;11725:24;;11913:690;;12058:54;12106:5;12058:54;;;12125:86;12204:6;12199:3;12125:86;;;12118:93;;12232:56;12282:5;12232:56;;;12308:7;12336:1;12321:260;12346:6;12343:1;12340:13;12321:260;;;12413:6;12407:13;12434:63;12493:3;12478:13;12434:63;;;12427:70;;12514:60;12567:6;12514:60;;;12504:70;-1:-1;;12368:1;12361:9;12321:260;;;-1:-1;12594:3;;12037:566;-1:-1;;;;;12037:566;12638:888;;12793:59;12846:5;12793:59;;;12865:91;12949:6;12944:3;12865:91;;;12858:98;;12979:3;13021:4;13013:6;13009:17;13004:3;13000:27;13048:61;13103:5;13048:61;;;13129:7;13157:1;13142:345;13167:6;13164:1;13161:13;13142:345;;;13229:9;13223:4;13219:20;13214:3;13207:33;13274:6;13268:13;13296:74;13365:4;13350:13;13296:74;;;13288:82;;13387:65;13445:6;13387:65;;;13475:4;13466:14;;;;;13377:75;-1:-1;;13189:1;13182:9;13142:345;;;-1:-1;13500:4;;12772:754;-1:-1;;;;;;;12772:754;13563:896;;13720:60;13774:5;13720:60;;;13793:92;13878:6;13873:3;13793:92;;;13786:99;;13908:3;13950:4;13942:6;13938:17;13933:3;13929:27;13977:62;14033:5;13977:62;;;14059:7;14087:1;14072:348;14097:6;14094:1;14091:13;14072:348;;;14159:9;14153:4;14149:20;14144:3;14137:33;14204:6;14198:13;14226:76;14297:4;14282:13;14226:76;;;14218:84;;14319:66;14378:6;14319:66;;;14408:4;14399:14;;;;;14309:76;-1:-1;;14119:1;14112:9;14072:348;;14498:690;;14643:54;14691:5;14643:54;;;14710:86;14789:6;14784:3;14710:86;;;14703:93;;14817:56;14867:5;14817:56;;;14893:7;14921:1;14906:260;14931:6;14928:1;14925:13;14906:260;;;14998:6;14992:13;15019:63;15078:3;15063:13;15019:63;;;15012:70;;15099:60;15152:6;15099:60;;;15089:70;-1:-1;;14953:1;14946:9;14906:260;;15196:94;15263:21;15278:5;15263:21;;15408:113;15491:24;15509:5;15491:24;;15528:152;15629:45;15649:24;15667:5;15649:24;;;15629:45;;15687:343;;15797:38;15829:5;15797:38;;;15847:70;15910:6;15905:3;15847:70;;;15840:77;;15922:52;15967:6;15962:3;15955:4;15948:5;15944:16;15922:52;;;15995:29;16017:6;15995:29;;;15986:39;;;;15777:253;-1:-1;;;15777:253;16382:818;;16499:5;16493:12;16533:1;16522:9;16518:17;16546:1;16541:247;;;;16799:1;16794:400;;;;16511:683;;16541:247;16619:4;16615:1;16604:9;16600:17;16596:28;16638:70;16701:6;16696:3;16638:70;;;-1:-1;;16727:25;;16715:38;;16631:77;-1:-1;;16776:4;16767:14;;;-1:-1;16541:247;;16794:400;16863:1;16852:9;16848:17;16879:70;16942:6;16937:3;16879:70;;;16872:77;;16971:37;17002:5;16971:37;;;17024:1;17032:130;17046:6;17043:1;17040:13;17032:130;;;17105:14;;17092:11;;;17085:35;17152:1;17139:15;;;;17068:4;17061:12;17032:130;;;17176:11;;;-1:-1;;;16511:683;;16469:731;;;;;;17208:170;17313:59;17366:5;17313:59;;17570:158;17669:53;17716:5;17669:53;;19618:395;;19778:67;19842:2;19837:3;19778:67;;;19878:34;19858:55;;19947:28;19942:2;19933:12;;19926:50;20004:2;19995:12;;19764:249;-1:-1;;19764:249;20022:400;;20182:67;20246:2;20241:3;20182:67;;;20282:34;20262:55;;20351:33;20346:2;20337:12;;20330:55;20413:2;20404:12;;20168:254;-1:-1;;20168:254;20431:372;;20591:67;20655:2;20650:3;20591:67;;;20691:34;20671:55;;-1:-1;;;20755:2;20746:12;;20739:27;20794:2;20785:12;;20577:226;-1:-1;;20577:226;20812:386;;20972:67;21036:2;21031:3;20972:67;;;21072:34;21052:55;;-1:-1;;;21136:2;21127:12;;21120:41;21189:2;21180:12;;20958:240;-1:-1;;20958:240;21207:398;;21385:84;21467:1;21462:3;21385:84;;;-1:-1;;;21482:87;;21597:1;21588:11;;21371:234;-1:-1;;21371:234;21614:376;;21774:67;21838:2;21833:3;21774:67;;;21874:34;21854:55;;-1:-1;;;21938:2;21929:12;;21922:31;21981:2;21972:12;;21760:230;-1:-1;;21760:230;21999:458;;22159:67;22223:2;22218:3;22159:67;;;22259:34;22239:55;;22328:34;22323:2;22314:12;;22307:56;-1:-1;;;22392:2;22383:12;;22376:44;22448:2;22439:12;;22145:312;-1:-1;;22145:312;22466:373;;22626:67;22690:2;22685:3;22626:67;;;22726:34;22706:55;;-1:-1;;;22790:2;22781:12;;22774:28;22830:2;22821:12;;22612:227;-1:-1;;22612:227;22848:457;;23008:67;23072:2;23067:3;23008:67;;;23108:34;23088:55;;23177:34;23172:2;23163:12;;23156:56;-1:-1;;;23241:2;23232:12;;23225:43;23296:2;23287:12;;22994:311;-1:-1;;22994:311;23314:401;;23474:67;23538:2;23533:3;23474:67;;;23574:34;23554:55;;23643:34;23638:2;23629:12;;23622:56;23706:2;23697:12;;23460:255;-1:-1;;23460:255;23724:317;;23884:67;23948:2;23943:3;23884:67;;;-1:-1;;;23964:40;;24032:2;24023:12;;23870:171;-1:-1;;23870:171;24050:477;;24228:85;24310:2;24305:3;24228:85;;;24346:34;24326:55;;24415:34;24410:2;24401:12;;24394:56;-1:-1;;;24479:2;24470:12;;24463:27;24518:2;24509:12;;24214:313;-1:-1;;24214:313;24536:412;;24714:85;24796:2;24791:3;24714:85;;;24832:34;24812:55;;-1:-1;;;24896:2;24887:12;;24880:31;24939:2;24930:12;;24700:248;-1:-1;;24700:248;24957:400;;25117:67;25181:2;25176:3;25117:67;;;25217:34;25197:55;;25286:33;25281:2;25272:12;;25265:55;25348:2;25339:12;;25103:254;-1:-1;;25103:254;25366:377;;25526:67;25590:2;25585:3;25526:67;;;25626:34;25606:55;;-1:-1;;;25690:2;25681:12;;25674:32;25734:2;25725:12;;25512:231;-1:-1;;25512:231;25752:379;;25912:67;25976:2;25971:3;25912:67;;;26012:34;25992:55;;-1:-1;;;26076:2;26067:12;;26060:34;26122:2;26113:12;;25898:233;-1:-1;;25898:233;26140:374;;26300:67;26364:2;26359:3;26300:67;;;26400:34;26380:55;;-1:-1;;;26464:2;26455:12;;26448:29;26505:2;26496:12;;26286:228;-1:-1;;26286:228;26523:321;;26683:67;26747:2;26742:3;26683:67;;;-1:-1;;;26763:44;;26835:2;26826:12;;26669:175;-1:-1;;26669:175;26853:400;;27013:67;27077:2;27072:3;27013:67;;;27113:34;27093:55;;27182:33;27177:2;27168:12;;27161:55;27244:2;27235:12;;26999:254;-1:-1;;26999:254;27262:379;;27422:67;27486:2;27481:3;27422:67;;;27522:34;27502:55;;-1:-1;;;27586:2;27577:12;;27570:34;27632:2;27623:12;;27408:233;-1:-1;;27408:233;27706:624;27919:23;;27849:4;27840:14;;;27948:57;27844:3;27919:23;27948:57;;;27869:142;28087:4;28080:5;28076:16;28070:23;28099:57;28150:4;28145:3;28141:14;28127:12;28099:57;;;28021:141;28236:4;28229:5;28225:16;28219:23;28248:61;28303:4;28298:3;28294:14;28280:12;28248:61;;;28172:143;27822:508;;;;28567:107;28646:22;28662:5;28646:22;;28681:124;28763:36;28793:5;28763:36;;28812:100;28883:23;28900:5;28883:23;;28919:650;;29174:148;29318:3;29174:148;;;29167:155;;29333:75;29404:3;29395:6;29333:75;;;29430:2;29425:3;29421:12;29414:19;;29444:75;29515:3;29506:6;29444:75;;;-1:-1;29541:2;29532:12;;29155:414;-1:-1;;29155:414;29576:372;;29775:148;29919:3;29775:148;;29955:372;;30154:148;30298:3;30154:148;;30334:340;30488:2;30473:18;;30502:79;30477:9;30554:6;30502:79;;;30592:72;30660:2;30649:9;30645:18;30636:6;30592:72;;30681:324;30827:2;30812:18;;30841:71;30816:9;30885:6;30841:71;;31012:533;31207:3;31192:19;;31222:71;31196:9;31266:6;31222:71;;;31304:72;31372:2;31361:9;31357:18;31348:6;31304:72;;;31387:66;31449:2;31438:9;31434:18;31425:6;31387:66;;;31464:71;31531:2;31520:9;31516:18;31507:6;31464:71;;31552:831;31820:3;31805:19;;31835:71;31809:9;31879:6;31835:71;;;31917:72;31985:2;31974:9;31970:18;31961:6;31917:72;;;32037:9;32031:4;32027:20;32022:2;32011:9;32007:18;32000:48;32062:78;32135:4;32126:6;32062:78;;;32054:86;;32188:9;32182:4;32178:20;32173:2;32162:9;32158:18;32151:48;32213:76;32284:4;32275:6;32213:76;;;32205:84;;32300:73;32368:3;32357:9;32353:19;32344:6;32300:73;;;31791:592;;;;;;;;;32390:819;32652:3;32637:19;;32667:71;32641:9;32711:6;32667:71;;;32749:72;32817:2;32806:9;32802:18;32793:6;32749:72;;;32869:9;32863:4;32859:20;32854:2;32843:9;32839:18;32832:48;32894:75;32964:4;32955:6;32894:75;;;32886:83;;33017:9;33011:4;33007:20;33002:2;32991:9;32987:18;32980:48;33042:73;33110:4;33101:6;33042:73;;33216:1183;33640:3;33655:47;;;33625:19;;33716:108;33625:19;33810:6;33716:108;;;33708:116;;33872:9;33866:4;33862:20;33857:2;33846:9;33842:18;33835:48;33897:108;34000:4;33991:6;33897:108;;;33889:116;;34053:9;34047:4;34043:20;34038:2;34027:9;34023:18;34016:48;34078:120;34193:4;34184:6;34078:120;;;34070:128;;34246:9;34240:4;34236:20;34231:2;34220:9;34216:18;34209:48;34271:118;34384:4;34375:6;34271:118;;34406:213;34524:2;34509:18;;34538:71;34513:9;34582:6;34538:71;;34626:547;34828:3;34813:19;;34843:71;34817:9;34887:6;34843:71;;;34925:72;34993:2;34982:9;34978:18;34969:6;34925:72;;;35008;35076:2;35065:9;35061:18;35052:6;35008:72;;;35091;35159:2;35148:9;35144:18;35135:6;35091:72;;35180:423;35348:2;35333:18;;35362:71;35337:9;35406:6;35362:71;;;35444:72;35512:2;35501:9;35497:18;35488:6;35444:72;;;35527:66;35589:2;35578:9;35574:18;35565:6;35527:66;;35610:539;35808:3;35793:19;;35823:71;35797:9;35867:6;35823:71;;;35905:68;35969:2;35958:9;35954:18;35945:6;35905:68;;;35984:72;36052:2;36041:9;36037:18;36028:6;35984:72;;;36067;36135:2;36124:9;36120:18;36111:6;36067:72;;36156:257;36296:2;36281:18;;36310:93;36285:9;36376:6;36310:93;;36692:245;36826:2;36811:18;;36840:87;36815:9;36900:6;36840:87;;36944:293;37078:2;37092:47;;;37063:18;;37153:74;37063:18;37213:6;37153:74;;37244:407;37435:2;37449:47;;;37420:18;;37510:131;37420:18;37510:131;;37658:407;37849:2;37863:47;;;37834:18;;37924:131;37834:18;37924:131;;38072:407;38263:2;38277:47;;;38248:18;;38338:131;38248:18;38338:131;;38486:407;38677:2;38691:47;;;38662:18;;38752:131;38662:18;38752:131;;38900:407;39091:2;39105:47;;;39076:18;;39166:131;39076:18;39166:131;;39314:407;39505:2;39519:47;;;39490:18;;39580:131;39490:18;39580:131;;39728:407;39919:2;39933:47;;;39904:18;;39994:131;39904:18;39994:131;;40142:407;40333:2;40347:47;;;40318:18;;40408:131;40318:18;40408:131;;40556:407;40747:2;40761:47;;;40732:18;;40822:131;40732:18;40822:131;;40970:407;41161:2;41175:47;;;41146:18;;41236:131;41146:18;41236:131;;41384:407;41575:2;41589:47;;;41560:18;;41650:131;41560:18;41650:131;;41798:407;41989:2;42003:47;;;41974:18;;42064:131;41974:18;42064:131;;42212:407;42403:2;42417:47;;;42388:18;;42478:131;42388:18;42478:131;;42626:407;42817:2;42831:47;;;42802:18;;42892:131;42802:18;42892:131;;43040:407;43231:2;43245:47;;;43216:18;;43306:131;43216:18;43306:131;;43454:407;43645:2;43659:47;;;43630:18;;43720:131;43630:18;43720:131;;43868:407;44059:2;44073:47;;;44044:18;;44134:131;44044:18;44134:131;;44282:313;44450:2;44435:18;;44464:121;44439:9;44558:6;44464:121;;44822:1847;45414:3;45399:19;;45429:71;45403:9;45473:6;45429:71;;;45511:80;45587:2;45576:9;45572:18;45563:6;45511:80;;;45639:9;45633:4;45629:20;45624:2;45613:9;45609:18;45602:48;45664:108;45767:4;45758:6;45664:108;;;45656:116;;45820:9;45814:4;45810:20;45805:2;45794:9;45790:18;45783:48;45845:108;45948:4;45939:6;45845:108;;;45837:116;;46002:9;45996:4;45992:20;45986:3;45975:9;45971:19;45964:49;46027:120;46142:4;46133:6;46027:120;;;46019:128;;46196:9;46190:4;46186:20;46180:3;46169:9;46165:19;46158:49;46221:118;46334:4;46325:6;46221:118;;;46213:126;;46350:73;46418:3;46407:9;46403:19;46394:6;46350:73;;;46434;46502:3;46491:9;46487:19;46478:6;46434:73;;;46556:9;46550:4;46546:20;46540:3;46529:9;46525:19;46518:49;46581:78;46654:4;46645:6;46581:78;;;46573:86;45385:1284;-1:-1;;;;;;;;;;;45385:1284;46676:1083;47006:3;46991:19;;47021:71;46995:9;47065:6;47021:71;;;47103:72;47171:2;47160:9;47156:18;47147:6;47103:72;;;47186;47254:2;47243:9;47239:18;47230:6;47186:72;;;47269;47337:2;47326:9;47322:18;47313:6;47269:72;;;47352:73;47420:3;47409:9;47405:19;47396:6;47352:73;;;47436;47504:3;47493:9;47489:19;47480:6;47436:73;;;47520;47588:3;47577:9;47573:19;47564:6;47520:73;;;47604:67;47666:3;47655:9;47651:19;47642:6;47604:67;;;47682;47744:3;47733:9;47729:19;47720:6;47682:67;;;46977:782;;;;;;;;;;;;;47766:324;47912:2;47897:18;;47926:71;47901:9;47970:6;47926:71;;48097:256;48159:2;48153:9;48185:17;;;48260:18;48245:34;;48281:22;;;48242:62;48239:2;;;48317:1;48314;48307:12;48239:2;48333;48326:22;48137:216;;-1:-1;48137:216;48360:304;;48519:18;48511:6;48508:30;48505:2;;;48551:1;48548;48541:12;48505:2;-1:-1;48586:4;48574:17;;;48639:15;;48442:222;49615:317;;49754:18;49746:6;49743:30;49740:2;;;49786:1;49783;49776:12;49740:2;-1:-1;49917:4;49853;49830:17;;;;-1:-1;;49826:33;49907:15;;49677:255;50921:151;51045:4;51036:14;;50993:79;51564:157;;51658:14;;;51700:4;51687:18;;;51617:104;51893:137;51996:12;;51967:63;53458:178;53576:19;;;53625:4;53616:14;;53569:67;55036:91;;55098:24;55116:5;55098:24;;55134:85;55200:13;55193:21;;55176:43;55305:142;55385:5;55391:51;55385:5;55391:51;;55454:121;-1:-1;;;;;55516:54;;55499:76;55661:81;55732:4;55721:16;;55704:38;55749:104;-1:-1;;;;;55810:38;;55793:60;55860:129;;55947:37;55978:5;55996:165;;56097:59;56150:5;56097:59;;56626:142;;56721:42;56757:5;56721:42;;57018:106;;57096:23;57113:5;57096:23;;57132:145;57213:6;57208:3;57203;57190:30;-1:-1;57269:1;57251:16;;57244:27;57183:94;57286:268;57351:1;57358:101;57372:6;57369:1;57366:13;57358:101;;;57439:11;;;57433:18;57420:11;;;57413:39;57394:2;57387:10;57358:101;;;57474:6;57471:1;57468:13;57465:2;;;-1:-1;;57539:1;57521:16;;57514:27;57335:219;57643:97;57731:2;57711:14;-1:-1;;57707:28;;57691:49;57748:109;57835:1;57828:5;57825:12;57815:2;;57841:9;57864:117;57933:24;57951:5;57933:24;;;57926:5;57923:35;57913:2;;57972:1;57969;57962:12;57988:111;58054:21;58069:5;58054:21;;58106:117;58175:24;58193:5;58175:24;;58354:113;58421:22;58437:5;58421:22;;58474:115;58542:23;58559:5;58542:23;",
  "source": "pragma solidity ^0.5.17;\npragma experimental ABIEncoderV2;\n\ncontract Governor {\n    /// @notice The name of this contract\n    string public constant name = \"Blender Governor\";\n\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\n    function quorumVotes() public pure returns (uint256) {\n        return 16800000e18;\n    } // 4% of Blnd\n\n    /// @notice The number of votes required in order for a voter to become a proposer\n    function proposalThreshold() public pure returns (uint256) {\n        return 4200000e18;\n    } // 1% of Blnd\n\n    /// @notice The maximum number of actions that can be included in a proposal\n    function proposalMaxOperations() public pure returns (uint256) {\n        return 10;\n    } // 10 actions\n\n    /// @notice The delay before voting on a proposal may take place, once proposed\n    function votingDelay() public pure returns (uint256) {\n        return 1;\n    } // 1 block\n\n    /// @notice The duration of voting on a proposal, in blocks\n    function votingPeriod() public pure returns (uint256) {\n        return 40320;\n    } // ~7 days in blocks (assuming 15s blocks)\n\n    /// @notice The address of the Blender Protocol Timelock\n    TimelockInterface public timelock;\n\n    /// @notice The address of the Blender governance token\n    BlndInterface public blender;\n\n    /// @notice The total number of proposals\n    uint256 public proposalCount;\n\n    struct Proposal {\n        /// @notice Unique id for looking up a proposal\n        uint256 id;\n        /// @notice Creator of the proposal\n        address proposer;\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\n        uint256 eta;\n        /// @notice the ordered list of target addresses for calls to be made\n        address[] targets;\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\n        uint256[] values;\n        /// @notice The ordered list of function signatures to be called\n        string[] signatures;\n        /// @notice The ordered list of calldata to be passed to each call\n        bytes[] calldatas;\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\n        uint256 startBlock;\n        /// @notice The block at which voting ends: votes must be cast prior to this block\n        uint256 endBlock;\n        /// @notice Current number of votes in favor of this proposal\n        uint256 forVotes;\n        /// @notice Current number of votes in opposition to this proposal\n        uint256 againstVotes;\n        /// @notice Flag marking whether the proposal has been canceled\n        bool canceled;\n        /// @notice Flag marking whether the proposal has been executed\n        bool executed;\n        /// @notice Receipts of ballots for the entire set of voters\n        mapping(address => Receipt) receipts;\n    }\n\n    /// @notice Ballot receipt record for a voter\n    struct Receipt {\n        /// @notice Whether or not a vote has been cast\n        bool hasVoted;\n        /// @notice Whether or not the voter supports the proposal\n        bool support;\n        /// @notice The number of votes the voter had, which were cast\n        uint96 votes;\n    }\n\n    /// @notice Possible states that a proposal may be in\n    enum ProposalState {\n        Pending,\n        Active,\n        Canceled,\n        Defeated,\n        Succeeded,\n        Queued,\n        Expired,\n        Executed\n    }\n\n    /// @notice The official record of all proposals ever proposed\n    mapping(uint256 => Proposal) public proposals;\n\n    /// @notice The latest proposal for each proposer\n    mapping(address => uint256) public latestProposalIds;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\n        \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\"\n    );\n\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\n        \"Ballot(uint256 proposalId,bool support)\"\n    );\n\n    /// @notice An event emitted when a new proposal is created\n    event ProposalCreated(\n        uint256 id,\n        address proposer,\n        address[] targets,\n        uint256[] values,\n        string[] signatures,\n        bytes[] calldatas,\n        uint256 startBlock,\n        uint256 endBlock,\n        string description\n    );\n\n    /// @notice An event emitted when a vote has been cast on a proposal\n    event VoteCast(\n        address voter,\n        uint256 proposalId,\n        bool support,\n        uint256 votes\n    );\n\n    /// @notice An event emitted when a proposal has been canceled\n    event ProposalCanceled(uint256 id);\n\n    /// @notice An event emitted when a proposal has been queued in the Timelock\n    event ProposalQueued(uint256 id, uint256 eta);\n\n    /// @notice An event emitted when a proposal has been executed in the Timelock\n    event ProposalExecuted(uint256 id);\n\n    constructor(address timelock_, address blender_) public {\n        timelock = TimelockInterface(timelock_);\n        blender = BlndInterface(blender_);\n    }\n\n    function propose(\n        address[] memory targets,\n        uint256[] memory values,\n        string[] memory signatures,\n        bytes[] memory calldatas,\n        string memory description\n    ) public returns (uint256) {\n        require(\n            blender.getPriorVotes(msg.sender, _sub256(block.number, 1)) >\n                proposalThreshold(),\n            \"Governor::propose: proposer votes below proposal threshold\"\n        );\n        require(\n            targets.length == values.length &&\n                targets.length == signatures.length &&\n                targets.length == calldatas.length,\n            \"Governor::propose: proposal function information arity mismatch\"\n        );\n        require(targets.length != 0, \"Governor::propose: must provide actions\");\n        require(\n            targets.length <= proposalMaxOperations(),\n            \"Governor::propose: too many actions\"\n        );\n\n        uint256 latestProposalId = latestProposalIds[msg.sender];\n        if (latestProposalId != 0) {\n            ProposalState proposersLatestProposalState = state(\n                latestProposalId\n            );\n            require(\n                proposersLatestProposalState != ProposalState.Active,\n                \"Governor::propose: one live proposal per proposer, found an already active proposal\"\n            );\n            require(\n                proposersLatestProposalState != ProposalState.Pending,\n                \"Governor::propose: one live proposal per proposer, found an already pending proposal\"\n            );\n        }\n\n        uint256 startBlock = _add256(block.number, votingDelay());\n        uint256 endBlock = _add256(startBlock, votingPeriod());\n\n        proposalCount++;\n        Proposal memory newProposal = Proposal({\n            id: proposalCount,\n            proposer: msg.sender,\n            eta: 0,\n            targets: targets,\n            values: values,\n            signatures: signatures,\n            calldatas: calldatas,\n            startBlock: startBlock,\n            endBlock: endBlock,\n            forVotes: 0,\n            againstVotes: 0,\n            canceled: false,\n            executed: false\n        });\n\n        proposals[newProposal.id] = newProposal;\n        latestProposalIds[newProposal.proposer] = newProposal.id;\n\n        emit ProposalCreated(\n            newProposal.id,\n            msg.sender,\n            targets,\n            values,\n            signatures,\n            calldatas,\n            startBlock,\n            endBlock,\n            description\n        );\n        return newProposal.id;\n    }\n\n    function queue(uint256 proposalId) public {\n        require(\n            state(proposalId) == ProposalState.Succeeded,\n            \"Governor::queue: proposal can only be queued if it is succeeded\"\n        );\n        Proposal storage proposal = proposals[proposalId];\n        uint256 eta = _add256(block.timestamp, timelock.delay());\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\n            _queueOrRevert(\n                proposal.targets[i],\n                proposal.values[i],\n                proposal.signatures[i],\n                proposal.calldatas[i],\n                eta\n            );\n        }\n        proposal.eta = eta;\n        emit ProposalQueued(proposalId, eta);\n    }\n\n    function _queueOrRevert(\n        address target,\n        uint256 value,\n        string memory signature,\n        bytes memory data,\n        uint256 eta\n    ) internal {\n        require(\n            !timelock.queuedTransactions(\n                keccak256(abi.encode(target, value, signature, data, eta))\n            ),\n            \"Governor::_queueOrRevert: proposal action already queued at eta\"\n        );\n        timelock.queueTransaction(target, value, signature, data, eta);\n    }\n\n    function execute(uint256 proposalId) public payable {\n        require(\n            state(proposalId) == ProposalState.Queued,\n            \"Governor::execute: proposal can only be executed if it is queued\"\n        );\n        Proposal storage proposal = proposals[proposalId];\n        proposal.executed = true;\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\n            timelock.executeTransaction.value(proposal.values[i])(\n                proposal.targets[i],\n                proposal.values[i],\n                proposal.signatures[i],\n                proposal.calldatas[i],\n                proposal.eta\n            );\n        }\n        emit ProposalExecuted(proposalId);\n    }\n\n    function cancel(uint256 proposalId) public {\n        ProposalState state = state(proposalId);\n        require(\n            state != ProposalState.Executed,\n            \"Governor::cancel: cannot cancel executed proposal\"\n        );\n\n        Proposal storage proposal = proposals[proposalId];\n        require(\n            blender.getPriorVotes(proposal.proposer, _sub256(block.number, 1)) <\n                proposalThreshold(),\n            \"Governor::cancel: proposer above threshold\"\n        );\n\n        proposal.canceled = true;\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\n            timelock.cancelTransaction(\n                proposal.targets[i],\n                proposal.values[i],\n                proposal.signatures[i],\n                proposal.calldatas[i],\n                proposal.eta\n            );\n        }\n\n        emit ProposalCanceled(proposalId);\n    }\n\n    function getActions(uint256 proposalId)\n        public\n        view\n        returns (\n            address[] memory targets,\n            uint256[] memory values,\n            string[] memory signatures,\n            bytes[] memory calldatas\n        )\n    {\n        Proposal storage p = proposals[proposalId];\n        return (p.targets, p.values, p.signatures, p.calldatas);\n    }\n\n    function getReceipt(uint256 proposalId, address voter)\n        public\n        view\n        returns (Receipt memory)\n    {\n        return proposals[proposalId].receipts[voter];\n    }\n\n    function state(uint256 proposalId) public view returns (ProposalState) {\n        require(\n            proposalCount >= proposalId && proposalId > 0,\n            \"Governor::state: invalid proposal id\"\n        );\n        Proposal storage proposal = proposals[proposalId];\n        if (proposal.canceled) {\n            return ProposalState.Canceled;\n        } else if (block.number <= proposal.startBlock) {\n            return ProposalState.Pending;\n        } else if (block.number <= proposal.endBlock) {\n            return ProposalState.Active;\n        } else if (\n            proposal.forVotes <= proposal.againstVotes ||\n            proposal.forVotes < quorumVotes()\n        ) {\n            return ProposalState.Defeated;\n        } else if (proposal.eta == 0) {\n            return ProposalState.Succeeded;\n        } else if (proposal.executed) {\n            return ProposalState.Executed;\n        } else if (\n            block.timestamp >= _add256(proposal.eta, timelock.GRACE_PERIOD())\n        ) {\n            return ProposalState.Expired;\n        } else {\n            return ProposalState.Queued;\n        }\n    }\n\n    function castVote(uint256 proposalId, bool support) public {\n        return _castVote(msg.sender, proposalId, support);\n    }\n\n    function castVoteBySig(\n        uint256 proposalId,\n        bool support,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public {\n        bytes32 domainSeparator = keccak256(\n            abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(name)),\n                _getChainId(),\n                address(this)\n            )\n        );\n        bytes32 structHash = keccak256(\n            abi.encode(BALLOT_TYPEHASH, proposalId, support)\n        );\n        bytes32 digest = keccak256(\n            abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash)\n        );\n        address signatory = ecrecover(digest, v, r, s);\n        require(\n            signatory != address(0),\n            \"Governor::castVoteBySig: invalid signature\"\n        );\n        return _castVote(signatory, proposalId, support);\n    }\n\n    function _castVote(\n        address voter,\n        uint256 proposalId,\n        bool support\n    ) internal {\n        require(\n            state(proposalId) == ProposalState.Active,\n            \"Governor::_castVote: voting is closed\"\n        );\n        Proposal storage proposal = proposals[proposalId];\n        Receipt storage receipt = proposal.receipts[voter];\n        require(\n            receipt.hasVoted == false,\n            \"Governor::_castVote: voter already voted\"\n        );\n        uint96 votes = blender.getPriorVotes(voter, proposal.startBlock);\n\n        if (support) {\n            proposal.forVotes = _add256(proposal.forVotes, votes);\n        } else {\n            proposal.againstVotes = _add256(proposal.againstVotes, votes);\n        }\n\n        receipt.hasVoted = true;\n        receipt.support = support;\n        receipt.votes = votes;\n\n        emit VoteCast(voter, proposalId, support, votes);\n    }\n\n    function _add256(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"addition overflow\");\n        return c;\n    }\n\n    function _sub256(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"subtraction underflow\");\n        return a - b;\n    }\n\n    function _getChainId() internal pure returns (uint256) {\n        uint256 chainId;\n        assembly {\n            chainId := chainid()\n        }\n        return chainId;\n    }\n}\n\ninterface TimelockInterface {\n    function delay() external view returns (uint256);\n\n    function GRACE_PERIOD() external view returns (uint256);\n\n    function acceptAdmin() external;\n\n    function queuedTransactions(bytes32 hash) external view returns (bool);\n\n    function queueTransaction(\n        address target,\n        uint256 value,\n        string calldata signature,\n        bytes calldata data,\n        uint256 eta\n    ) external returns (bytes32);\n\n    function cancelTransaction(\n        address target,\n        uint256 value,\n        string calldata signature,\n        bytes calldata data,\n        uint256 eta\n    ) external;\n\n    function executeTransaction(\n        address target,\n        uint256 value,\n        string calldata signature,\n        bytes calldata data,\n        uint256 eta\n    ) external payable returns (bytes memory);\n}\n\ninterface BlndInterface {\n    function getPriorVotes(address account, uint256 blockNumber)\n        external\n        view\n        returns (uint96);\n}\n",
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "ProposalCanceled",
          "type": "event"
        },
        "0x7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "targets",
              "type": "address[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "string[]",
              "name": "signatures",
              "type": "string[]"
            },
            {
              "indexed": false,
              "internalType": "bytes[]",
              "name": "calldatas",
              "type": "bytes[]"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "startBlock",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "endBlock",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "name": "ProposalCreated",
          "type": "event"
        },
        "0x712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "ProposalExecuted",
          "type": "event"
        },
        "0x9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "eta",
              "type": "uint256"
            }
          ],
          "name": "ProposalQueued",
          "type": "event"
        },
        "0x877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c46": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "voter",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "support",
              "type": "bool"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256"
            }
          ],
          "name": "VoteCast",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x8572F6De356cCeeb2F0d6a62C9eAe61188f1B0f6",
      "transactionHash": "0x7327d52a4e875143fff17f4ebcc4b40e751a405dca408d3717ed0be11ef31dab"
    }
  },
  "schemaVersion": "3.2.4",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    }
  }
}